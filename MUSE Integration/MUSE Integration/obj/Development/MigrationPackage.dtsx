<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/18/2015 2:22:16 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WIN-PMAUG1E77ME"
  DTS:CreatorName="WIN-PMAUG1E77ME\Administrator"
  DTS:DTSID="{022DFC8B-2D10-4B8C-A4B8-CE3C98A2ABA9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="MigrationPackage"
  DTS:PackageType="5"
  DTS:VersionBuild="20"
  DTS:VersionGUID="{CBF9F7FA-D36B-4379-8A9C-B449C8757A00}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.muse]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{96734611-C7B1-4FA6-9308-28F828931655}"
      DTS:ObjectName="localhost.muse">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=muse;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4114FFA4-EE0B-47E0-8BF3-408C4C27F989}"
      DTS:ObjectName="SourceDatabase">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{996AA53D-1B26-48CB-AF95-75B6BB62BC16}"
      DTS:ObjectName="SourcePassword">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{96AC68D0-4CD0-44CE-9F37-64E8E032991C}"
      DTS:ObjectName="SourcePort">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{383DDF75-C184-4669-B6D5-3DB28AB5FB78}"
      DTS:ObjectName="SourceServer">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E298F190-A617-4C52-B19F-90322C8659AB}"
      DTS:ObjectName="SourceUserName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{366F2189-2D60-4BA6-9F80-6D9CE9122604}"
      DTS:ObjectName="TargetDB">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{485A352B-D53C-436B-8495-9299C649B892}"
      DTS:ObjectName="TargetServerName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{390E49D4-030B-4E6D-AB27-5616E6E947CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="MigrationWorkingDirectory">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Drop all tables in `muse` database"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DTSID="{0BD8D44D-8BDC-4166-B4BF-C8F97415169C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Drop all tables in `muse` database"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{96734611-C7B1-4FA6-9308-28F828931655}"
          SQLTask:SqlStatementSource="DECLARE @Sql NVARCHAR(500) DECLARE @Cursor CURSOR&#xA;&#xA;SET @Cursor = CURSOR FAST_FORWARD FOR&#xA;SELECT DISTINCT sql = 'ALTER TABLE [' + tc2.TABLE_NAME + '] DROP [' + rc1.CONSTRAINT_NAME + ']'&#xA;FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc1&#xA;LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc2 ON tc2.CONSTRAINT_NAME =rc1.CONSTRAINT_NAME&#xA;&#xA;OPEN @Cursor FETCH NEXT FROM @Cursor INTO @Sql&#xA;&#xA;WHILE (@@FETCH_STATUS = 0)&#xA;BEGIN&#xA;Exec SP_EXECUTESQL @Sql&#xA;FETCH NEXT FROM @Cursor INTO @Sql&#xA;END&#xA;&#xA;CLOSE @Cursor DEALLOCATE @Cursor&#xA;GO&#xA;&#xA;EXEC sp_MSForEachTable 'DROP TABLE ?'&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Server Migration Assistant"
      DTS:CreationName="Microsoft.ExecuteProcess"
      DTS:DelayValidation="True"
      DTS:Description="Execute Process Task"
      DTS:DTSID="{14EC5332-BB71-4BCB-9562-4578FA7BAB51}"
      DTS:ExecutableType="Microsoft.ExecuteProcess"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Server Migration Assistant"
      DTS:TaskContact="Execute Process Task;Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="WorkingDirectory">@[User::MigrationWorkingDirectory]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <ExecuteProcessData
          Executable="SSMAForMySqlConsole.exe"
          RequireFullFileName="False"
          Arguments="-s muse_mysql_ssma.xml -v muse_mysql_ssma_config.xml"
          WindowStyle="Hidden" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Prepare SSMA"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{867FB218-0355-46D5-AE17-889BB5E3B0C9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Prepare SSMA">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Prepare SSMA\Create Temporary Directory"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{F9CBC4C8-FD0D-444A-A58D-CD2B3970D6D4}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Temporary Directory"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_1cac6889ad594fc5a51f8de86c40213a"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::MigrationWorkingDirectory">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_1cac6889ad594fc5a51f8de86c40213a.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e9d0bbdb-40f9-462e-9751-4a61123199a8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1cac6889ad594fc5a51f8de86c40213a</RootNamespace>
    <AssemblyName>ST_1cac6889ad594fc5a51f8de86c40213a</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe"
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_1cac6889ad594fc5a51f8de86c40213a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String folder = Path.Combine(Path.GetTempPath(), Guid.NewGuid().ToString());
            if (!Directory.Exists(folder))
            {
                Directory.CreateDirectory(folder);
            }
            Dts.Variables["MigrationWorkingDirectory"].Value = folder;
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1cac6889ad594fc5a51f8de86c40213a</msb:CodeName>
		<msb:DisplayName>ST_1cac6889ad594fc5a51f8de86c40213a</msb:DisplayName>
		<msb:ProjectId>{B1ED93F1-50D4-44AF-9207-245416A9561B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_1cac6889ad594fc5a51f8de86c40213a.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1cac6889ad594fc5a51f8de86c40213a.Properties.Settings.get_Default():ST_1cac6889ad594fc5a51f8de86c40213a.Properties.Sett" +
    "ings")]

namespace ST_1cac6889ad594fc5a51f8de86c40213a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1cac6889ad594fc5a51f8de86c40213a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1cac6889ad594fc5a51f8de86c40213a")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1cac6889ad594fc5a51f8de86c40213a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1cac6889ad594fc5a51f8de86c40213a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1cac6889ad594fc5a51f8de86c40213a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1cac6889ad594fc5a51f8de86c40213a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1cac6889ad594fc5a51f8de86c40213a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_1cac6889ad594fc5a51f8de86c40213a.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAoQ/FUAAAAAAAAAAOAAAiELAQsAABAAAAAIAAAAAAAA3i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIQuAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
LgAAAAAAAEgAAAACAAUA4CEAAKQMAAABAAAAAAAAACghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAgBVAAAAAgAAESgWAAAKKBcAAAoLEgH+FhwAAAFvGAAACigZAAAK
CgYoGgAACi0HBigbAAAKJgIoHAAACm8dAAAKcnMAAHBvHgAACgZvHwAACgIoHAAAChZvIAAACioe
AighAAAKKgAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AAD0AwAAI34AAGAEAAAMBgAAI1N0cmluZ3MAAAAAbAoAAKgAAAAjVVMAFAsAABAAAAAjR1VJRAAA
ACQLAACAAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAIQAAAAUAAAAGAAAA
CQAAAAEAAAAhAAAAAgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgAB
AAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkC
cAIGALYCcAIGANUCcAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMG
AOADzQMGAP0DugAGAAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEGAM4ExAQGAN8E
ugAGAP0ExAQGAA4FxAQOACwFFAESAIUFZQUSAJ0FZQUAAAAAAQAAAAAAAQABAAAAEAAyADwABQAB
AAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAoAEQB/ARMAEQCsARcA
EQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAA
AJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAA
kRibBIkAAgC8IAAAAACGABoCGwACAB0hAAAAAIYYvAEbAAIAAAABADcCOQC8AVgAQQC8AVgASQC8
AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsA
mQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsA2QDT
BI0A4QDkBJEACQDsBJYA2QD1BJoA6QAHBaAA6QAcBaUAGQA+BasA+QCPBbAAAQGmBbYACQGvBb0A
+QC5BV0AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbADkBLgAjADkBLgBjAF8BLgALAMgALgAT
ABABLgAzABABLgArADkBLgA7AD8BLgBDADkBLgBbAFYBQwBrAFMASQCTAIAAYQCbAFMAgwCrAFMA
dQDCAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcABIAA
AAEAAABrFg1lAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAA
AAAMAAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoARgUAAAAAAAAAAAEAAADIBQAABQAE
AAAAADxNb2R1bGU+AFNUXzFjYWM2ODg5YWQ1OTRmYzVhNTFmOGRlODZjNDAyMTNhLmRsbABSZXNv
dXJjZXMAU1RfMWNhYzY4ODlhZDU5NGZjNWE1MWY4ZGU4NmM0MDIxM2EuUHJvcGVydGllcwBTZXR0
aW5ncwBTY3JpcHRNYWluAFNUXzFjYWM2ODg5YWQ1OTRmYzVhNTFmOGRlODZjNDAyMTNhAFNjcmlw
dFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0
X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUA
dmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
U3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0
ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5
cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2Vt
Ymx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0uSU8AUGF0aABHZXRUZW1wUGF0aABHdWlk
AE5ld0d1aWQAVG9TdHJpbmcAQ29tYmluZQBEaXJlY3RvcnkARXhpc3RzAERpcmVjdG9yeUluZm8A
Q3JlYXRlRGlyZWN0b3J5AFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVz
AGdldF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0Ac2V0X1ZhbHVlAHNldF9UYXNrUmVzdWx0
AFNUXzFjYWM2ODg5YWQ1OTRmYzVhNTFmOGRlODZjNDAyMTNhLlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwAAAHFTAFQAXwAxAGMAYQBjADYAOAA4ADkAYQBkADUAOQA0AGYAYwA1AGEANQAx
AGYAOABkAGUAOAA2AGMANAAwADIAMQAzAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAADNNAGkAZwByAGEAdABpAG8AbgBXAG8AcgBrAGkAbgBnAEQAaQByAGUAYwB0
AG8AcgB5AAAAwfWycNtfFEuQc+0VzEVJfAAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEE
AAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAE
IAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQMAAA4E
AAARcQMgAA4FAAIODg4EAAECDgUAARJ5DgQgABJ9BSAAEoCBBiABEoCFHAQgAQEcBQcCDhFxRwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0KAEAI1NUXzFjYWM2ODg5YWQ1OTRmYzVhNTFmOGRlODZjNDAyMTNhAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEAAKwuAAAAAAAAAAAAAM4uAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADALgAAAAAA
AAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQANZWsWAAABAA1laxY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAA
MAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMQBjAGEAYwA2ADgAOAA5AGEAZAA1ADkANABmAGMANQBhADUAMQBmADgAZABlADgANgBjADQA
MAAyADEAMwBhAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUANwAz
ADkALgAyADUAOAA2ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
MQBjAGEAYwA2ADgAOAA5AGEAZAA1ADkANABmAGMANQBhADUAMQBmADgAZABlADgANgBjADQAMAAy
ADEAMwBhAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBUAF8AMQBjAGEAYwA2ADgAOAA5AGEAZAA1ADkANABmAGMANQBhADUA
MQBmADgAZABlADgANgBjADQAMAAyADEAMwBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAVABfADEAYwBhAGMANgA4ADgAOQBhAGQANQA5ADQAZgBjADUAYQA1ADEA
ZgA4AGQAZQA4ADYAYwA0ADAAMgAxADMAYQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQA3ADMAOQAuADIANQA4ADYAOQAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAOQAuADIANQA4ADYAOQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADgPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Prepare SSMA\Write SSMA Config"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{6E4297CF-CF72-45EB-A534-F3DC8A7DF715}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Write SSMA Config"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_3cd6e3c1a5874e4fba64c74da6bd25e4"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Prepare SSMA\Write SSMA Script"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{E87DBF92-0490-4158-90B0-15A4F319CE13}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Write SSMA Script"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_ed0c96773bc64f799829ea07575d5062"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::MigrationWorkingDirectory">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="muse_mysql_ssma.xml"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ssma-script-file
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="C:\Microsoft SQL Server Migration Assistant for MySQL\Schemas\M2SSConsoleScriptSchema.xsd">

  <servers>
    <mysql name="muse_source">
      <standard-mode>
        <server value ="$SourceServer$"/>
        <port value ="$SourcePort$"/>
        <user-id value ="$SourceUserName$"/>
        <password value="$SourcePassword$"/>
        <ssl-verify value ="false"/>
      </standard-mode>
    </mysql>

    <sql-server name ="muse_target">
      <windows-authentication>
        <database value ="$TargetDB$"/>
        <server value ="$TargetServerName$"/>
      </windows-authentication>
    </sql-server>
  </servers>

  <script-commands>
    <create-new-project
			project-folder="$project_folder$"
			project-name="$project_name$"
			overwrite-if-exists="$project_overwrite$" />
    <connect-source-database server="muse_source" />
    <connect-target-database server="muse_target" />
    <map-schema
			source-schema="$SourceDatabase$"
            sql-server-schema="$TargetDB$.dbo" />
    <convert-schema
			object-name="$SourceDatabase$"
            object-type="Databases" />
    <synchronize-target
			object-name="$TargetDB$.dbo"
            object-type="Schemas" />
    <migrate-data
			write-summary-report-to="$SummaryReportsFolder$"
			report-errors="true"
			verbose="true">
      <metabase-object object-name="$SourceDatabase$.alterseindruckdomaene"/>
      <metabase-object object-name="$SourceDatabase$.basiselement"/>
      <metabase-object object-name="$SourceDatabase$.basiselementdesign"/>
      <metabase-object object-name="$SourceDatabase$.basiselementdomaene"/>
      <metabase-object object-name="$SourceDatabase$.basiselementfarbe"/>
      <metabase-object object-name="$SourceDatabase$.basiselementform"/>
      <metabase-object object-name="$SourceDatabase$.basiselementfunktion"/>
      <metabase-object object-name="$SourceDatabase$.basiselementmaterial"/>
      <metabase-object object-name="$SourceDatabase$.basiselementrelation"/>
      <metabase-object object-name="$SourceDatabase$.basiselementteilelement"/>
      <metabase-object object-name="$SourceDatabase$.basiselementtrageweise"/>
      <metabase-object object-name="$SourceDatabase$.basiselementzustand"/>
      <metabase-object object-name="$SourceDatabase$.charaktereigenschaftsdomaene"/>
      <metabase-object object-name="$SourceDatabase$.designdomaene"/>
      <metabase-object object-name="$SourceDatabase$.farbeindruckdomaene"/>
      <metabase-object object-name="$SourceDatabase$.farbendomaene"/>
      <metabase-object object-name="$SourceDatabase$.farbkonzeptdomaene"/>
      <metabase-object object-name="$SourceDatabase$.film"/>
      <metabase-object object-name="$SourceDatabase$.filmfarbkonzept"/>
      <metabase-object object-name="$SourceDatabase$.filmgenre"/>
      <metabase-object object-name="$SourceDatabase$.filmproduktionsort"/>
      <metabase-object object-name="$SourceDatabase$.formendomaene"/>
      <metabase-object object-name="$SourceDatabase$.funktionsdomaene"/>
      <metabase-object object-name="$SourceDatabase$.genredomaene"/>
      <metabase-object object-name="$SourceDatabase$.koerpermodifikationsdomaene"/>
      <metabase-object object-name="$SourceDatabase$.koerperteildomaene"/>
      <metabase-object object-name="$SourceDatabase$.kostuem"/>
      <metabase-object object-name="$SourceDatabase$.kostuemalterseindruck"/>
      <metabase-object object-name="$SourceDatabase$.kostuembasiselement"/>
      <metabase-object object-name="$SourceDatabase$.kostuemcharaktereigenschaft"/>
      <metabase-object object-name="$SourceDatabase$.kostuemkoerpermodifikation"/>
      <metabase-object object-name="$SourceDatabase$.kostuemspielort"/>
      <metabase-object object-name="$SourceDatabase$.kostuemspielzeit"/>
      <metabase-object object-name="$SourceDatabase$.kostuemtageszeit"/>
      <metabase-object object-name="$SourceDatabase$.kostuemtimecode"/>
      <metabase-object object-name="$SourceDatabase$.materialdomaene"/>
      <metabase-object object-name="$SourceDatabase$.materialeindruckdomaene"/>
      <metabase-object object-name="$SourceDatabase$.operatordomaene"/>
      <metabase-object object-name="$SourceDatabase$.produktionsortdomaene"/>
      <metabase-object object-name="$SourceDatabase$.rolle"/>
      <metabase-object object-name="$SourceDatabase$.rolledominantecharaktereigenschaft"/>
      <metabase-object object-name="$SourceDatabase$.rollefamilienstand"/>
      <metabase-object object-name="$SourceDatabase$.spielortdomaene"/>
      <metabase-object object-name="$SourceDatabase$.spielzeitdomaene"/>
      <metabase-object object-name="$SourceDatabase$.tageszeitdomaene"/>
      <metabase-object object-name="$SourceDatabase$.teilelement"/>
      <metabase-object object-name="$SourceDatabase$.teilelementdesign"/>
      <metabase-object object-name="$SourceDatabase$.teilelementdomaene"/>
      <metabase-object object-name="$SourceDatabase$.teilelementfarbe"/>
      <metabase-object object-name="$SourceDatabase$.teilelementform"/>
      <metabase-object object-name="$SourceDatabase$.teilelementmaterial"/>
      <metabase-object object-name="$SourceDatabase$.teilelementmaterialbug"/>
      <metabase-object object-name="$SourceDatabase$.teilelementmaterialbug_alt"/>
      <metabase-object object-name="$SourceDatabase$.teilelementtrageweise"/>
      <metabase-object object-name="$SourceDatabase$.teilelementzustand"/>
      <metabase-object object-name="$SourceDatabase$.trageweisendomaene"/>
      <metabase-object object-name="$SourceDatabase$.typusdomaene"/>
      <metabase-object object-name="$SourceDatabase$.zustandsdomaene"/>
    </migrate-data>
    <close-project if-modified="save" />
  </script-commands>

</ssma-script-file>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections;
using System.Data;
using System.IO;
using System.Reflection;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_ed0c96773bc64f799829ea07575d5062
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            String folder = Dts.Variables["MigrationWorkingDirectory"].Value.ToString();
            Assembly assembly = Assembly.GetExecutingAssembly();
            String[] files = new String[] { "muse_mysql_ssma.xml", "M2SSConsoleScriptSchema.xsd" };
            foreach (String file in files)
            {
                String resourceName = String.Format("{0}.{1}", this.GetType().Namespace, file);
                StreamReader reader = new StreamReader(assembly.GetManifestResourceStream(resourceName));
                File.WriteAllText(Path.Combine(folder, file), reader.ReadToEnd());
            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_ed0c96773bc64f799829ea07575d5062.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1B735CFF-148D-4A58-85E7-9EE299BDF8BC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ed0c96773bc64f799829ea07575d5062</RootNamespace>
    <AssemblyName>ST_ed0c96773bc64f799829ea07575d5062</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <EmbeddedResource Include="M2SSConsoleScriptSchema.xsd" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="muse_mysql_ssma.xml" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_ed0c96773bc64f799829ea07575d5062</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_ed0c96773bc64f799829ea07575d5062</msb:DisplayName>
		<msb:ProjectId>{3AC71DD2-158F-4676-BE39-F310222A90BF}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ed0c96773bc64f799829ea07575d5062.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="muse_mysql_ssma.xml"/>
		<msb:File Include="M2SSConsoleScriptSchema.xsd"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="M2SSConsoleScriptSchema.xsd"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xs:schema
           attributeFormDefault="unqualified"
           elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="ssma-script-file" type="SSMAScriptFileDescription"/>

  <xs:complexType name="SSMAScriptFileDescription">
    <xs:annotation>
      <xs:documentation>SSMA for MySQL Console Script</xs:documentation>
    </xs:annotation>
    <xs:choice maxOccurs="1" minOccurs="0">
      <xs:group ref="ScriptFileContentDescription" maxOccurs="unbounded" minOccurs="0"/>
    </xs:choice>
  </xs:complexType>

  <xs:group name="ScriptFileContentDescription">
    <xs:choice>
      <xs:element name="script-commands" type="ScriptCommandsDescription"/>
      <xs:element name="config" type="ConfigurationCommandDescription"/>
      <xs:element name="servers" type="ServersCommandDescription"/>
    </xs:choice>
  </xs:group>

  <!-- SERVERS definition -->

  <xs:complexType name="ServersCommandDescription">
    <xs:choice>
      <xs:group ref="ServersCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:complexType>

  <xs:group name="ServersCommandGroupDescription">
    <xs:choice>
      <xs:group ref="SqlServerCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="SqlAzureCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="MySqlCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:group>

  <xs:group name="SqlAzureCommandGroupDescription">
    <xs:choice>
      <xs:element name="sql-azure" type="SqlAzureCommandDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="SqlAzureCommandDescription">
    <xs:group ref="SqlAzureCommandParamsGroup"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:group name="SqlAzureCommandParamsGroup">
    <xs:all>
      <xs:element name="server" type="ServerDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="database" type="DatabaseDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="user-id" type="UserIDDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="password" type="PasswordDescription" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:group>

  <xs:group name="MySqlCommandGroupDescription">
    <xs:choice>
      <xs:element name="mysql" type="MySqlCommandDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="MySqlCommandDescription">
    <xs:group ref="MySqlCommandParamsGroup" minOccurs="1" maxOccurs="1"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:group name="MySqlCommandParamsGroup">
    <xs:choice>
      <xs:element name="standard-mode" type="StandardConnectionModeDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="StandardConnectionModeDescription">
    <xs:annotation>
      <xs:documentation>
        Standard connection mode
      </xs:documentation>
    </xs:annotation>
    <xs:group ref="StandardModeConnections"/>
  </xs:complexType>

  <xs:group name="StandardModeConnections">
    <xs:all>
      <xs:element name="server" type="ServerDescription" minOccurs="1" maxOccurs="1"/>
      <!--<xs:element name="Database" type="DatabaseDescription" minOccurs="0" maxOccurs="1"/>-->
      <xs:element name="user-id" type="UserIDDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="password" type="PasswordDescription" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element name="ConnectionProvider" type="ConnectionProviderDescription" minOccurs="1" maxOccurs="1"/>-->
      <xs:element name="driver" type="DriverDescription" minOccurs="0" maxOccurs="1"/>
      <xs:element name="port" type="PortDescription" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ssl-verify" type="SSLVerifyDescription" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ssl-ca" type="SSLCADescription" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ssl-cert" type="SSLCertDescription" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ssl-key" type="SSLKeyDescription" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:group>

  <xs:complexType name="SSLCertDescription">
    <xs:annotation>
      <xs:documentation>
        Path of the SSL certificate file
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="SSLKeyDescription">
    <xs:annotation>
      <xs:documentation>
        Path of the SSL key file
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="SSLCADescription">
    <xs:annotation>
      <xs:documentation>
        Path of the SSL certification authority file
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="SSLVerifyDescription">
    <xs:annotation>
      <xs:documentation>
        Use SSL connection - true | false | $variable-name$
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="true|false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="PortDescription">
    <xs:annotation>
      <xs:documentation>
        Port number of the server to connect
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="DriverDescription">
    <xs:annotation>
      <xs:documentation>
        Name of the Driver used to connect to server as given in the ODBC Data source
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ConnectionProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Connection Provider used to connect to server
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:group name="SqlServerCommandGroupDescription">
    <xs:choice>
      <xs:element name="sql-server" type="SqlServerCommandDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="SqlServerCommandDescription">
    <xs:group ref="SqlServerCommandParamsGroup" minOccurs="1" maxOccurs="1"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:group name="SqlServerCommandParamsGroup">
    <xs:choice>
      <xs:element name="windows-authentication" type="WindowsAuthenticationConnectionDescription"/>
      <xs:element name="sql-server-authentication" type="SqlServerAuthenticationConnectionDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="SqlServerAuthenticationConnectionDescription">
    <xs:annotation>
      <xs:documentation>
        Use Sql Server Authentication for connection
      </xs:documentation>
    </xs:annotation>
    <xs:group ref="NonTrustedConnections"/>
  </xs:complexType>

  <xs:complexType name="WindowsAuthenticationConnectionDescription">
    <xs:annotation>
      <xs:documentation>
        A trusted Sql Server connection
      </xs:documentation>
    </xs:annotation>
    <xs:group ref="TrustedConnections"/>
  </xs:complexType>

  <xs:group name="TrustedConnections">
    <xs:all>
      <xs:element name="server" type="ServerDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="database" type="DatabaseDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="encrypt" type="EncryptDescription" minOccurs="0" maxOccurs="1"/>
      <xs:element name="trust-server-certificate" type="TrustServerCertificateDescription" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:group>

  <xs:group name="NonTrustedConnections">
    <xs:all>
      <xs:element name="server" type="ServerDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="database" type="DatabaseDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="user-id" type="UserIDDescription" minOccurs="1" maxOccurs="1"/>
      <xs:element name="password" type="PasswordDescription" minOccurs="0" maxOccurs="1"/>
      <xs:element name="encrypt" type="EncryptDescription" minOccurs="0" maxOccurs="1"/>
      <xs:element name="trust-server-certificate" type="TrustServerCertificateDescription" minOccurs="0" maxOccurs="1"/>
    </xs:all>
  </xs:group>

  <xs:complexType name="ServerDescription">
    <xs:annotation>
      <xs:documentation>
        Name of the Sql Server instance
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="DatabaseDescription">
    <xs:annotation>
      <xs:documentation>
        Name of the Database in the given instance
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="UserIDDescription">
    <xs:annotation>
      <xs:documentation>
        User ID for connecting to the server instance
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="PasswordDescription">
    <xs:annotation>
      <xs:documentation>
        Password for connecting to the server instance
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="EncryptDescription">
    <xs:annotation>
      <xs:documentation>
        Use an encrypted connection - true | false | $variable-name$
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="true|false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="TrustServerCertificateDescription">
    <xs:annotation>
      <xs:documentation>
        Trust Server Certificate for encyption - true | false | $variable-name$
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="value" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="true|false"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- SERVERS definition -->

  <!-- CONFIG schema definition -->
  <xs:complexType name="ConfigurationCommandDescription">
    <xs:annotation>
      <xs:documentation>SSMA Console script configuration</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="1">
      <xs:group ref="ConfigCommandsGroup"/>
    </xs:choice>
  </xs:complexType>

  <xs:group name="ConfigCommandsGroup">
    <xs:choice>
      <xs:element name="output-providers" type="OutputProvidersDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="OutputProvidersDescription">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="DataMigrationConnectionProviders"/>
      <xs:group ref="CollectorErrorProviders"/>
      <xs:group ref="ConvertWorkspaceProviders"/>
      <xs:group ref="SynchronizationDecisionProviders"/>
      <xs:group ref="ReconnectManagerProviders"/>
      <xs:group ref="ConverterObjectOverwriteProviders"/>
      <xs:group ref="PrerequisiteProviders"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
      <xs:group ref="EncryptedPasswordProviders"/>
    </xs:choice>
  </xs:complexType>

  <xs:group name="EncryptedPasswordProviders">
    <xs:choice>
      <xs:element name="encrypted-password" type="EncryptedPasswordDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="EncryptedPasswordDescription">
    <xs:annotation>
      <xs:documentation>
        Override encrypted password in storage with that in script file
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="override" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>
          override - true | false | $variable-name$
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="LogVerbosityProviders">
    <xs:choice>
      <xs:element name="log-verbosity" type="LogVerbosityDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="LogVerbosityDescription">
    <xs:annotation>
      <xs:documentation>
        Set logging verbosity levels
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="level">
      <xs:annotation>
        <xs:documentation>
          Level of logging - fatal-error | error | warning | debug | info | $variable-name$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="fatal-error|error|warning|info|debug"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="OutputWindowProviders">
    <xs:choice>
      <xs:element name="output-window" type="OutputWindowProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="OutputWindowProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Output window options
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="suppress-messages" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>
          Suppress messages from being displayed in the output window - true | false | $variable-value$
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="destination">
      <xs:annotation>
        <xs:documentation>The destination for output messages - file | stdout | $variable-value$</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="file|stdout"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="file-name" type="xs:string">
      <xs:annotation>
        <xs:documentation>The path of the file to store the output messages if destination is "file"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="DataMigrationConnectionProviders">
    <xs:choice>
      <xs:element name="data-migration-connection" type="DataMigrationConnectionProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="DataMigrationConnectionProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Connection information used for data migration
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="source-use-last-used" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>
          Use the last used source connection information - true | false | $variable-value$
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target-use-last-used" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>
          Use the last used target connection information - true | false | $variable-value$
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="source-server" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The name of the source server as mentioned in the Servers section
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="target-server" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          The name of the target server as mentioned in the Servers section
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="CollectorErrorProviders">
    <xs:choice>
      <xs:element name="user-input-popup" type="CollectorErrorProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="CollectorErrorProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Collector failure options
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="mode" use="required">
      <xs:annotation>
        <xs:documentation>
          Action to be taken when schema collector fails - ask-user | continue | error | $variable-value$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="continue|error|ask-user"/>
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="ConvertWorkspaceProviders">
    <xs:choice>
      <xs:element name="upgrade-project" type="ConvertWorkspaceProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="ConvertWorkspaceProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Project upgradation settings
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="action" use="required">
      <xs:annotation>
        <xs:documentation>
          Action to be taken when there is a need to upgrade project - ask-user | yes | no | $variable-value$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="ask-user|yes|no"/>
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="SynchronizationDecisionProviders">
    <xs:choice>
      <xs:element name="synchronization" type="SynchronizationDecisionProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="SynchronizationDecisionProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Synchronization options
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="safe-mode" type="BooleanTrueFalseTypeDescription" use="required">
      <xs:annotation>
        <xs:documentation>Synchronize in Safe mode - true | false | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="ReconnectManagerProviders">
    <xs:choice>
      <xs:element name="reconnect-manager" type="ReconnectManagerProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="ReconnectManagerProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Options describing actions to be taken on re-connection to source and target
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="on-source-reconnect">
      <xs:annotation>
        <xs:documentation>
          Action to be taken when source server requires re-connection - reconnect-to-last-used-server | generate-an-error | $variable-value$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="reconnect-to-last-used-server|generate-an-error"/>
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="on-target-reconnect">
      <xs:annotation>
        <xs:documentation>
          Action to be taken when target server requires re-connection - reconnect-to-last-used-server | generate-an-error | $variable-value$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="reconnect-to-last-used-server|generate-an-error"/>
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="ConverterObjectOverwriteProviders">
    <xs:choice>
      <xs:element name="object-overwrite" type="ConverterObjectOverwriteProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="ConverterObjectOverwriteProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Action to be taken when schema collector fails - ask-user | continue | error | $variable-value$
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="action" use="required">
      <xs:annotation>
        <xs:documentation>
          Action to be taken if object(s) being converted exists in target schema - error | skip | overwrite | ask-user | $variable-name$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="error|skip|overwrite|ask-user"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="PrerequisiteProviders">
    <xs:choice>
      <xs:element name="prerequisites" type="PrerequisiteProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="PrerequisiteProviderDescription">
    <xs:annotation>
      <xs:documentation>
        Option specifying action to be taken on pre-requisite failures during connection
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="strict-mode" type="BooleanTrueFalseTypeDescription" use="required">
      <xs:annotation>
        <xs:documentation>Mode to specify whether to continue on pre-requisite failures - true | false | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="ProgressReportingProviders">
    <xs:choice>
      <xs:element name="progress-reporting" type="ProgressReportingProviderDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="ProgressReportingProviderDescription">
    <xs:attribute name="enable" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>
          Enable operation progress reporting - true | false | $variable-name$
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="report-messages" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>
          Report progress messages - true | false | $variable-name$
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="report-progress">
      <xs:annotation>
        <xs:documentation>
          Report progress in percentages or turn off - every-1% | every-2% | every-5% | every-10% | every-20% | off | $variable-name$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="every-1%|every-2%|every-5%|every-10%|every-20%|off"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <!-- CONFIG schema definition -->

  <!-- SCRIPT COMMANDS definition -->
  <xs:complexType name="ScriptCommandsDescription">
    <xs:annotation>
      <xs:documentation>Script Command Sequence</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:group ref="CommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:complexType>

  <xs:group name="CommandGroupDescription">
    <xs:choice>
      <xs:element name="create-new-project" type="CreateNewProjectCommandDescription" minOccurs="1" maxOccurs="unbounded" />
      <xs:element name="open-project" type="OpenProjectCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="save-project" type="SaveProjectCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="close-project" type="CloseProjectCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="connect-source-database" type="ConnectionCommandsDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Command code to connect to the source server from SSMA</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="connect-target-database" type="ConnectionCommandsDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Command code to connect to the target server from SSMA</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reconnect-source-database" type="ConnectionCommandsDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Command code to re-connect to the source server from SSMA</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reconnect-target-database" type="ConnectionCommandsDescription" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Command code to re-connect to the target server from SSMA</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="force-load" type="ForceLoadCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="refresh-from-database" type="RefreshFromDatabaseCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="synchronize-target" type="SynchronizeTargetCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="save-as-script" type="SaveAsScriptCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="convert-schema" type="ConvertSchemaCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="generate-assessment-report" type="GenerateAssessmentReportCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="map-schema" type="SchemaMappingCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="migrate-data" type="DataMigrationCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="convert-sql-statement" type="ConvertToTSqlCommandDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="ConvertToTSqlCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to perform conversion of a given SQL statement</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:group ref="ConvertToTSqlCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attributeGroup ref="LoggingAndReportingAttributes"/>
    <xs:attributeGroup ref="ConversionReportAttributes" />
    <xs:attribute name="context" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Schema context for the T-SQL statement </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="destination">
      <xs:annotation>
        <xs:documentation>The destination for the converted T-SQL statement - file | stdout | $variable-value$</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="file|stdout"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="write-converted-sql-to" type="xs:string">
      <xs:annotation>
        <xs:documentation>The path of the file to store the converted T-SQL when destination is "file"</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sql" type="xs:string">
      <xs:annotation>
        <xs:documentation>Individual T-SQL statement that needs to be converted</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sql-files" type="xs:string">
      <xs:annotation>
        <xs:documentation>The path of the file where the T-SQL statement that needs to be converted is stored</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:group name="ConvertToTSqlCommandGroupDescription">
    <xs:choice>
      <xs:group ref="MetabaseObjectsDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="ConverterObjectOverwriteProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="DataMigrationCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to migrate data from source to target server</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="DataMigrationCommandGroup"/>
    </xs:choice>
    <xs:attributeGroup ref="LoggingAndReportingAttributes"/>
    <xs:attribute name="object-name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the table metabase object whose data needs to be migrated</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="object-type" type="MetabaseObjectCategories"/>
  </xs:complexType>

  <xs:group name="DataMigrationCommandGroup">
    <xs:choice>
      <xs:group ref="MetabaseObjectsDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="DataMigrationConnectionProviders" minOccurs="0" maxOccurs="1"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="PrerequisiteProviders"/>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="SchemaMappingCommandDescription">
    <xs:annotation>
      <xs:documentation>
        Command code to map Source and Target Schema
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="source-schema" use="required" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Source schema name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sql-server-schema" use="required" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          Target schema name
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="ConnectionCommandsDescription">
    <xs:choice>
      <xs:group ref="ConnectionCommandsGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attribute name="server" use="required" type="xs:string"/>
  </xs:complexType>

  <xs:group name="ConnectionCommandsGroupDescription">
    <xs:choice>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="CollectorErrorProviders"/>
      <xs:group ref="PrerequisiteProviders"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="EncryptedPasswordProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="GenerateAssessmentReportCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to generate Assessment Report for given metabase node(s)</xs:documentation>
    </xs:annotation>
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <xs:group ref="GenerateAssessmentReportCommandGroup" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attributeGroup ref="LoggingAndReportingAttributes"/>
    <xs:attributeGroup ref="AssessmentReportAttributes" />
    <xs:attribute name="object-name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the Metabase object for which Assessment Report is to be generated</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="object-type" type="MetabaseObjectCategories"/>
  </xs:complexType>

  <xs:complexType name="ConvertSchemaCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to perform Schema Conversion operation for given metabase node(s)</xs:documentation>
    </xs:annotation>
    <xs:choice maxOccurs="unbounded" minOccurs="0">
      <xs:group ref="ConvertSchemaCommandGroup" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attributeGroup ref="LoggingAndReportingAttributes"/>
    <xs:attributeGroup ref="ConversionReportAttributes" />
    <xs:attribute name="object-name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the Metabase object which needs to be converted</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="object-type" type="MetabaseObjectCategories"/>
  </xs:complexType>

  <xs:group name="ConvertSchemaCommandGroup">
    <xs:choice>
      <xs:group ref="MetabaseObjectsDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="ConverterObjectOverwriteProviders"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:group name="GenerateAssessmentReportCommandGroup">
    <xs:choice>
      <xs:group ref="MetabaseObjectsDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:attributeGroup name="ConversionReportAttributes">
    <xs:attribute name="conversion-report-folder" type="xs:string">
      <xs:annotation>
        <xs:documentation>The path of the folder where Conversion Report will be saved</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="conversion-report-overwrite" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>Overwrite existing Conversion reports  - true | false | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="LoggingAndReportingAttributes">
    <xs:attribute name="verbose" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>Enable Verbose logging - yes | no | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="report-errors" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>Report when an error occurs during operation - yes | no | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="write-summary-report-to" type="xs:string">
      <xs:annotation>
        <xs:documentation>The path of the file in which the summary report would be written</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="AssessmentReportAttributes">
    <xs:attribute name="assessment-report-folder" type="xs:string">
      <xs:annotation>
        <xs:documentation>The path of the folder where Assessment Report will be saved</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="assessment-report-overwrite" type="BooleanTrueFalseTypeDescription">
      <xs:annotation>
        <xs:documentation>Overwrite existing Assessment reports  - true | false | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:complexType name="SaveAsScriptCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to generate a SQL script for the given metabase node(s)</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:group ref="SaveAsScriptCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attributeGroup ref="SaveAsScriptCommandAttributes"/>
  </xs:complexType>

  <xs:group name="SaveAsScriptCommandGroupDescription">
    <xs:choice>
      <xs:group ref="MetabaseObjectsDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:attributeGroup name="SaveAsScriptCommandAttributes">
    <xs:attribute name="object-name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the Metabase object for which the script is generated</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="object-type" type="MetabaseObjectCategories"/>
    <xs:attribute name="overwrite" type="BooleanTrueFalseTypeDescription" use="optional">
      <xs:annotation>
        <xs:documentation>Overwrite if script already exists - true | false | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="metabase" type="MetabaseTypeDescription" use="required"/>
    <xs:attribute name="destination" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The path of the File/Folder where script will be generated</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:complexType name="SynchronizeTargetCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to Synchronize changes in metabase node(s) with the database</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:group ref="SynchronizeTargetCommandGroup" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attributeGroup ref="RefreshOrSynchronizeCommandAttributes"/>
  </xs:complexType>

  <xs:group name="SynchronizeTargetCommandGroup">
    <xs:choice>
      <xs:group ref="MetabaseObjectsDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="SynchronizationDecisionProviders" minOccurs="0" maxOccurs="1"/>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="RefreshFromDatabaseCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to Refresh given metabase node(s)</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:group ref="RefreshFromDatabaseCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attributeGroup ref="RefreshOrSynchronizeCommandAttributes"/>
  </xs:complexType>

  <xs:group name="RefreshFromDatabaseCommandGroupDescription">
    <xs:choice>
      <xs:group ref="MetabaseObjectsDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="CollectorErrorProviders"/>
      <xs:group ref="SynchronizationDecisionProviders"/>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>
  <xs:attributeGroup name="RefreshOrSynchronizeCommandAttributes">
    <xs:attribute name="object-name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the Metabase object to Refresh or Synchronize</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="on-error" use="optional">
      <xs:annotation>
        <xs:documentation>
          Action to be taken when an error occurs during Refresh or Synchronize operation
          - report-total-as-warning | report-each-as-warning | fail-script | $variable-name$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="report-total-as-warning|report-each-as-warning|fail-script"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="report-errors-to" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>The path of the file into which Refresh and Synchronize errors should be written</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="safe-mode" type="BooleanTrueFalseTypeDescription" use="optional">
      <xs:annotation>
        <xs:documentation>Refresh or Synchronize in Safe mode - true | false | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="object-type" type="MetabaseObjectCategories"/>
  </xs:attributeGroup>

  <xs:complexType name="ForceLoadCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to forcibly load the metabase content for the specified metabase node(s)</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:group ref="ForceLoadCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attributeGroup ref="ForceLoadCommandAttributes"/>
  </xs:complexType>

  <xs:attributeGroup name="ForceLoadCommandAttributes">
    <xs:attribute name="object-name" type="xs:string">
      <xs:annotation>
        <xs:documentation>Name of the Metabase object to force load</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="object-type" type="MetabaseObjectCategories"/>
    <xs:attribute name="metabase" type="MetabaseTypeDescription" use="required"/>
  </xs:attributeGroup>

  <xs:group name="ForceLoadCommandGroupDescription">
    <xs:choice>
      <xs:group ref="MetabaseObjectsDescription" minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="CollectorErrorProviders"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="CloseProjectCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to close the current SSMA project</xs:documentation>
    </xs:annotation>
    <xs:attribute name="if-modified" use="optional">
      <xs:annotation>
        <xs:documentation>
          Specify the action to be taken before closing if SSMA project was modified
          - save | error | ignore | $variable-name$
        </xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="save|error|ignore"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="SaveProjectCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to save the current SSMA project</xs:documentation>
    </xs:annotation>
    <!-- save-project command has no content -->
  </xs:complexType>

  <xs:complexType name="OpenProjectCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to Open an existing SSMA project</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="SSMAProjectDescription">
        <xs:choice>
          <xs:group ref="OpenProjectCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="OpenProjectCommandGroupDescription">
    <xs:choice>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="ConvertWorkspaceProviders"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="SSMAProjectDescription">
    <xs:attributeGroup ref ="SSMAProjectDescriptionAttributes"/>
  </xs:complexType>

  <xs:complexType name="CreateNewProjectCommandDescription">
    <xs:annotation>
      <xs:documentation>Command code to Create new SSMA project</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="SSMAProjectDescription">
        <xs:choice>
          <xs:group ref="CreateNewProjectCommandGroupDescription" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
        <xs:attributeGroup ref="CreateNewProjectAttributes"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:group name="CreateNewProjectCommandGroupDescription">
    <xs:choice>
      <xs:group ref="OutputWindowProviders"/>
      <xs:group ref="ProgressReportingProviders"/>
      <xs:group ref="LogVerbosityProviders"/>
    </xs:choice>
  </xs:group>

  <xs:attributeGroup name="CreateNewProjectAttributes">
    <xs:attribute name="overwrite-if-exists" type="BooleanTrueFalseTypeDescription" use="optional">
      <xs:annotation>
        <xs:documentation>Overwrite if SSMA project already exists - true | false | $variable-name$</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="project-type" use="optional">
      <xs:annotation>
        <xs:documentation>Specify the type of SSMA project to create - sql-server-2005 | sql-server-2008 | sql-server-2012 | sql-server-2014 | sql-azure | $variable-name$</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
          <xs:pattern value="sql-server-2005|sql-server-2008|sql-server-2012|sql-server-2014|sql-azure"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:attributeGroup name="SSMAProjectDescriptionAttributes">
    <xs:attribute name="project-folder" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Folder path where SSMA project will be saved</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="project-name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Name of the SSMA project</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>

  <xs:group name="MetabaseObjectsDescription">
    <xs:choice>
      <xs:element name="metabase-object" type="MetabaseObjectDescription"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="MetabaseObjectDescription">
    <xs:annotation>
      <xs:documentation>Command code to specify individual metabase object</xs:documentation>
    </xs:annotation>
    <xs:attributeGroup ref="MetabaseObjectAttributes"/>
  </xs:complexType>

  <xs:attributeGroup name="MetabaseObjectAttributes">
    <xs:attribute name="object-name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Name of the Metabase object</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="object-type" type="MetabaseObjectCategories"/>
  </xs:attributeGroup>

  <xs:simpleType name="MetabaseTypeDescription">
    <xs:annotation>
      <xs:documentation>Specify the Metabase type of SSMA - source | target | $variable-name$</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
      <xs:pattern value="source|target"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="BooleanTrueFalseTypeDescription">
    <xs:restriction base="xs:string">
      <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
      <xs:pattern value="true|false"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="BooleanYesNoTypeDescription">
    <xs:restriction base="xs:string">
      <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
      <xs:pattern value="yes|no"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MetabaseObjectCategories">
    <xs:annotation>
      <xs:documentation>
        The type of the Metabase object - root | category | Databases | Schemas | Tables | Views | Procedures |
        Functions | Triggers | Defaults | Rules | Datatypes | Parameters | Columns | Indexes | Constraints |
        Synonyms | Events | $variable-value$
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(\$[a-zA-Z0-9](([a-zA-Z0-9+\-_\(\)\*&amp;\^\%#@!\s])*)\$)"/>
      <xs:pattern value="root|category|Databases|Schemas|Tables|Views|Procedures|Functions|Triggers|Defaults|
                  Rules|Datatypes|Parameters|Columns|Indexes|Constraints|Synonyms|Events"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- SCRIPT COMMANDS definition -->

</xs:schema>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ed0c96773bc64f799829ea07575d5062.Properties.Settings.get_Default():ST_ed0c96773bc64f799829ea07575d5062.Properties.Sett" +
    "ings")]

namespace ST_ed0c96773bc64f799829ea07575d5062.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ed0c96773bc64f799829ea07575d5062")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ed0c96773bc64f799829ea07575d5062")]
[assembly: AssemblyCopyright("Copyright @  2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ed0c96773bc64f799829ea07575d5062.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ed0c96773bc64f799829ea07575d5062.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ed0c96773bc64f799829ea07575d5062.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ed0c96773bc64f799829ea07575d5062.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ed0c96773bc64f799829ea07575d5062.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_ed0c96773bc64f799829ea07575d5062.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALgY/FUAAAAAAAAAAOAAAiELAQsAAO4AAAAIAAAAAAAATg0B
AAAgAAAAIAEAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAABgAQAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPwMAQBPAAAAACABAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAEABAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAVO0AAAAgAAAA7gAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAIAEAAAYAAADwAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAEABAAACAAAA9gAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAw
DQEAAAAAAEgAAAACAAUA1P4AACgOAAABAAAAAAAAAHghAABc3QAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwAwCmAAAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKbxoA
AAoKKBsAAAoLGI0eAAABEwYRBhZypwAAcKIRBhdyzwAAcKIRBgwIEwcWEwgrRhEHEQiaDXIHAQBw
AigcAAAKbx0AAAoJKB4AAAoTBAcRBG8fAAAKcyAAAAoTBQYJKCEAAAoRBW8iAAAKKCMAAAoRCBdY
EwgRCBEHjmkysgIoFgAAChZvJAAACioeAiglAAAKKgAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAErFAADvu788P3ht
bCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJ1dGYtOCI/Pg0KPHhzOnNjaGVtYQ0KICAgICAgICAg
ICBhdHRyaWJ1dGVGb3JtRGVmYXVsdD0idW5xdWFsaWZpZWQiDQogICAgICAgICAgIGVsZW1lbnRG
b3JtRGVmYXVsdD0icXVhbGlmaWVkIg0KICAgICAgICAgICB4bWxuczp4cz0iaHR0cDovL3d3dy53
My5vcmcvMjAwMS9YTUxTY2hlbWEiPg0KDQogIDx4czplbGVtZW50IG5hbWU9InNzbWEtc2NyaXB0
LWZpbGUiIHR5cGU9IlNTTUFTY3JpcHRGaWxlRGVzY3JpcHRpb24iLz4NCg0KICA8eHM6Y29tcGxl
eFR5cGUgbmFtZT0iU1NNQVNjcmlwdEZpbGVEZXNjcmlwdGlvbiI+DQogICAgPHhzOmFubm90YXRp
b24+DQogICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5TU01BIGZvciBNeVNRTCBDb25zb2xlIFNjcmlw
dDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQogICAgPHhzOmNob2lj
ZSBtYXhPY2N1cnM9IjEiIG1pbk9jY3Vycz0iMCI+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJTY3Jp
cHRGaWxlQ29udGVudERlc2NyaXB0aW9uIiBtYXhPY2N1cnM9InVuYm91bmRlZCIgbWluT2NjdXJz
PSIwIi8+DQogICAgPC94czpjaG9pY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdy
b3VwIG5hbWU9IlNjcmlwdEZpbGVDb250ZW50RGVzY3JpcHRpb24iPg0KICAgIDx4czpjaG9pY2U+
DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJzY3JpcHQtY29tbWFuZHMiIHR5cGU9IlNjcmlwdENv
bW1hbmRzRGVzY3JpcHRpb24iLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9ImNvbmZpZyIgdHlw
ZT0iQ29uZmlndXJhdGlvbkNvbW1hbmREZXNjcmlwdGlvbiIvPg0KICAgICAgPHhzOmVsZW1lbnQg
bmFtZT0ic2VydmVycyIgdHlwZT0iU2VydmVyc0NvbW1hbmREZXNjcmlwdGlvbiIvPg0KICAgIDwv
eHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQogIDwhLS0gU0VSVkVSUyBkZWZpbml0aW9uIC0t
Pg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJTZXJ2ZXJzQ29tbWFuZERlc2NyaXB0aW9uIj4N
CiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iU2VydmVyc0NvbW1hbmRHcm91
cERlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAg
PC94czpjaG9pY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5hbWU9IlNl
cnZlcnNDb21tYW5kR3JvdXBEZXNjcmlwdGlvbiI+DQogICAgPHhzOmNob2ljZT4NCiAgICAgIDx4
czpncm91cCByZWY9IlNxbFNlcnZlckNvbW1hbmRHcm91cERlc2NyaXB0aW9uIiBtaW5PY2N1cnM9
IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJTcWxBenVy
ZUNvbW1hbmRHcm91cERlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3Vu
ZGVkIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJNeVNxbENvbW1hbmRHcm91cERlc2NyaXB0aW9u
IiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgPC94czpjaG9pY2U+
DQogIDwveHM6Z3JvdXA+DQoNCiAgPHhzOmdyb3VwIG5hbWU9IlNxbEF6dXJlQ29tbWFuZEdyb3Vw
RGVzY3JpcHRpb24iPg0KICAgIDx4czpjaG9pY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJz
cWwtYXp1cmUiIHR5cGU9IlNxbEF6dXJlQ29tbWFuZERlc2NyaXB0aW9uIi8+DQogICAgPC94czpj
aG9pY2U+DQogIDwveHM6Z3JvdXA+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlNxbEF6dXJl
Q29tbWFuZERlc2NyaXB0aW9uIj4NCiAgICA8eHM6Z3JvdXAgcmVmPSJTcWxBenVyZUNvbW1hbmRQ
YXJhbXNHcm91cCIvPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ibmFtZSIgdHlwZT0ieHM6c3Ry
aW5nIiB1c2U9InJlcXVpcmVkIi8+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3Vw
IG5hbWU9IlNxbEF6dXJlQ29tbWFuZFBhcmFtc0dyb3VwIj4NCiAgICA8eHM6YWxsPg0KICAgICAg
PHhzOmVsZW1lbnQgbmFtZT0ic2VydmVyIiB0eXBlPSJTZXJ2ZXJEZXNjcmlwdGlvbiIgbWluT2Nj
dXJzPSIxIiBtYXhPY2N1cnM9IjEiLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9ImRhdGFiYXNl
IiB0eXBlPSJEYXRhYmFzZURlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjEiIG1heE9jY3Vycz0iMSIv
Pg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0idXNlci1pZCIgdHlwZT0iVXNlcklERGVzY3JpcHRp
b24iIG1pbk9jY3Vycz0iMSIgbWF4T2NjdXJzPSIxIi8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1l
PSJwYXNzd29yZCIgdHlwZT0iUGFzc3dvcmREZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIwIiBtYXhP
Y2N1cnM9IjEiLz4NCiAgICA8L3hzOmFsbD4NCiAgPC94czpncm91cD4NCg0KICA8eHM6Z3JvdXAg
bmFtZT0iTXlTcWxDb21tYW5kR3JvdXBEZXNjcmlwdGlvbiI+DQogICAgPHhzOmNob2ljZT4NCiAg
ICAgIDx4czplbGVtZW50IG5hbWU9Im15c3FsIiB0eXBlPSJNeVNxbENvbW1hbmREZXNjcmlwdGlv
biIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQogIDx4czpjb21wbGV4VHlw
ZSBuYW1lPSJNeVNxbENvbW1hbmREZXNjcmlwdGlvbiI+DQogICAgPHhzOmdyb3VwIHJlZj0iTXlT
cWxDb21tYW5kUGFyYW1zR3JvdXAiIG1pbk9jY3Vycz0iMSIgbWF4T2NjdXJzPSIxIi8+DQogICAg
PHhzOmF0dHJpYnV0ZSBuYW1lPSJuYW1lIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0icmVxdWlyZWQi
Lz4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iTXlTcWxDb21tYW5k
UGFyYW1zR3JvdXAiPg0KICAgIDx4czpjaG9pY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJz
dGFuZGFyZC1tb2RlIiB0eXBlPSJTdGFuZGFyZENvbm5lY3Rpb25Nb2RlRGVzY3JpcHRpb24iLz4N
CiAgICA8L3hzOmNob2ljZT4NCiAgPC94czpncm91cD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFt
ZT0iU3RhbmRhcmRDb25uZWN0aW9uTW9kZURlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlv
bj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICBTdGFuZGFyZCBjb25uZWN0aW9u
IG1vZGUNCiAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQog
ICAgPHhzOmdyb3VwIHJlZj0iU3RhbmRhcmRNb2RlQ29ubmVjdGlvbnMiLz4NCiAgPC94czpjb21w
bGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iU3RhbmRhcmRNb2RlQ29ubmVjdGlvbnMiPg0K
ICAgIDx4czphbGw+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJzZXJ2ZXIiIHR5cGU9IlNlcnZl
ckRlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjEiIG1heE9jY3Vycz0iMSIvPg0KICAgICAgPCEtLTx4
czplbGVtZW50IG5hbWU9IkRhdGFiYXNlIiB0eXBlPSJEYXRhYmFzZURlc2NyaXB0aW9uIiBtaW5P
Y2N1cnM9IjAiIG1heE9jY3Vycz0iMSIvPi0tPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0idXNl
ci1pZCIgdHlwZT0iVXNlcklERGVzY3JpcHRpb24iIG1pbk9jY3Vycz0iMSIgbWF4T2NjdXJzPSIx
Ii8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJwYXNzd29yZCIgdHlwZT0iUGFzc3dvcmREZXNj
cmlwdGlvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9IjEiLz4NCiAgICAgIDwhLS08eHM6ZWxl
bWVudCBuYW1lPSJDb25uZWN0aW9uUHJvdmlkZXIiIHR5cGU9IkNvbm5lY3Rpb25Qcm92aWRlckRl
c2NyaXB0aW9uIiBtaW5PY2N1cnM9IjEiIG1heE9jY3Vycz0iMSIvPi0tPg0KICAgICAgPHhzOmVs
ZW1lbnQgbmFtZT0iZHJpdmVyIiB0eXBlPSJEcml2ZXJEZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIw
IiBtYXhPY2N1cnM9IjEiLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9InBvcnQiIHR5cGU9IlBv
cnREZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9IjEiLz4NCiAgICAgIDx4czpl
bGVtZW50IG5hbWU9InNzbC12ZXJpZnkiIHR5cGU9IlNTTFZlcmlmeURlc2NyaXB0aW9uIiBtaW5P
Y2N1cnM9IjAiIG1heE9jY3Vycz0iMSIvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0ic3NsLWNh
IiB0eXBlPSJTU0xDQURlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0iMSIvPg0K
ICAgICAgPHhzOmVsZW1lbnQgbmFtZT0ic3NsLWNlcnQiIHR5cGU9IlNTTENlcnREZXNjcmlwdGlv
biIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9IjEiLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9
InNzbC1rZXkiIHR5cGU9IlNTTEtleURlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vy
cz0iMSIvPg0KICAgIDwveHM6YWxsPg0KICA8L3hzOmdyb3VwPg0KDQogIDx4czpjb21wbGV4VHlw
ZSBuYW1lPSJTU0xDZXJ0RGVzY3JpcHRpb24iPg0KICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAg
PHhzOmRvY3VtZW50YXRpb24+DQogICAgICAgIFBhdGggb2YgdGhlIFNTTCBjZXJ0aWZpY2F0ZSBm
aWxlDQogICAgICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0KICAg
IDx4czphdHRyaWJ1dGUgbmFtZT0idmFsdWUiIHR5cGU9InhzOnN0cmluZyIgdXNlPSJyZXF1aXJl
ZCIvPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJTU0xL
ZXlEZXNjcmlwdGlvbiI+DQogICAgPHhzOmFubm90YXRpb24+DQogICAgICA8eHM6ZG9jdW1lbnRh
dGlvbj4NCiAgICAgICAgUGF0aCBvZiB0aGUgU1NMIGtleSBmaWxlDQogICAgICA8L3hzOmRvY3Vt
ZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0i
dmFsdWUiIHR5cGU9InhzOnN0cmluZyIgdXNlPSJyZXF1aXJlZCIvPg0KICA8L3hzOmNvbXBsZXhU
eXBlPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJTU0xDQURlc2NyaXB0aW9uIj4NCiAgICA8
eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICBQYXRoIG9m
IHRoZSBTU0wgY2VydGlmaWNhdGlvbiBhdXRob3JpdHkgZmlsZQ0KICAgICAgPC94czpkb2N1bWVu
dGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InZh
bHVlIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0icmVxdWlyZWQiLz4NCiAgPC94czpjb21wbGV4VHlw
ZT4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iU1NMVmVyaWZ5RGVzY3JpcHRpb24iPg0KICAg
IDx4czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+DQogICAgICAgIFVzZSBT
U0wgY29ubmVjdGlvbiAtIHRydWUgfCBmYWxzZSB8ICR2YXJpYWJsZS1uYW1lJA0KICAgICAgPC94
czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6YXR0cmlidXRl
IG5hbWU9InZhbHVlIiB1c2U9InJlcXVpcmVkIj4NCiAgICAgIDx4czpzaW1wbGVUeXBlPg0KICAg
ICAgICA8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4NCiAgICAgICAgICA8eHM6cGF0
dGVybiB2YWx1ZT0iKFwkW2EtekEtWjAtOV0oKFthLXpBLVowLTkrXC1fXChcKVwqJmFtcDtcXlwl
I0AhXHNdKSopXCQpIi8+DQogICAgICAgICAgPHhzOnBhdHRlcm4gdmFsdWU9InRydWV8ZmFsc2Ui
Lz4NCiAgICAgICAgPC94czpyZXN0cmljdGlvbj4NCiAgICAgIDwveHM6c2ltcGxlVHlwZT4NCiAg
ICA8L3hzOmF0dHJpYnV0ZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Y29tcGxleFR5
cGUgbmFtZT0iUG9ydERlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4
czpkb2N1bWVudGF0aW9uPg0KICAgICAgICBQb3J0IG51bWJlciBvZiB0aGUgc2VydmVyIHRvIGNv
bm5lY3QNCiAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQog
ICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJ2YWx1ZSIgdHlwZT0ieHM6c3RyaW5nIiB1c2U9InJlcXVp
cmVkIi8+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IkRy
aXZlckRlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVu
dGF0aW9uPg0KICAgICAgICBOYW1lIG9mIHRoZSBEcml2ZXIgdXNlZCB0byBjb25uZWN0IHRvIHNl
cnZlciBhcyBnaXZlbiBpbiB0aGUgT0RCQyBEYXRhIHNvdXJjZQ0KICAgICAgPC94czpkb2N1bWVu
dGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InZh
bHVlIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0icmVxdWlyZWQiLz4NCiAgPC94czpjb21wbGV4VHlw
ZT4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iQ29ubmVjdGlvblByb3ZpZGVyRGVzY3JpcHRp
b24iPg0KICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+DQogICAg
ICAgIENvbm5lY3Rpb24gUHJvdmlkZXIgdXNlZCB0byBjb25uZWN0IHRvIHNlcnZlcg0KICAgICAg
PC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6YXR0cmli
dXRlIG5hbWU9InZhbHVlIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0icmVxdWlyZWQiLz4NCiAgPC94
czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iU3FsU2VydmVyQ29tbWFuZEdyb3Vw
RGVzY3JpcHRpb24iPg0KICAgIDx4czpjaG9pY2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJz
cWwtc2VydmVyIiB0eXBlPSJTcWxTZXJ2ZXJDb21tYW5kRGVzY3JpcHRpb24iLz4NCiAgICA8L3hz
OmNob2ljZT4NCiAgPC94czpncm91cD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iU3FsU2Vy
dmVyQ29tbWFuZERlc2NyaXB0aW9uIj4NCiAgICA8eHM6Z3JvdXAgcmVmPSJTcWxTZXJ2ZXJDb21t
YW5kUGFyYW1zR3JvdXAiIG1pbk9jY3Vycz0iMSIgbWF4T2NjdXJzPSIxIi8+DQogICAgPHhzOmF0
dHJpYnV0ZSBuYW1lPSJuYW1lIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0icmVxdWlyZWQiLz4NCiAg
PC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iU3FsU2VydmVyQ29tbWFuZFBh
cmFtc0dyb3VwIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0id2lu
ZG93cy1hdXRoZW50aWNhdGlvbiIgdHlwZT0iV2luZG93c0F1dGhlbnRpY2F0aW9uQ29ubmVjdGlv
bkRlc2NyaXB0aW9uIi8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJzcWwtc2VydmVyLWF1dGhl
bnRpY2F0aW9uIiB0eXBlPSJTcWxTZXJ2ZXJBdXRoZW50aWNhdGlvbkNvbm5lY3Rpb25EZXNjcmlw
dGlvbiIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQogIDx4czpjb21wbGV4
VHlwZSBuYW1lPSJTcWxTZXJ2ZXJBdXRoZW50aWNhdGlvbkNvbm5lY3Rpb25EZXNjcmlwdGlvbiI+
DQogICAgPHhzOmFubm90YXRpb24+DQogICAgICA8eHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgICAg
VXNlIFNxbCBTZXJ2ZXIgQXV0aGVudGljYXRpb24gZm9yIGNvbm5lY3Rpb24NCiAgICAgIDwveHM6
ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQogICAgPHhzOmdyb3VwIHJlZj0i
Tm9uVHJ1c3RlZENvbm5lY3Rpb25zIi8+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmNv
bXBsZXhUeXBlIG5hbWU9IldpbmRvd3NBdXRoZW50aWNhdGlvbkNvbm5lY3Rpb25EZXNjcmlwdGlv
biI+DQogICAgPHhzOmFubm90YXRpb24+DQogICAgICA8eHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAg
ICAgQSB0cnVzdGVkIFNxbCBTZXJ2ZXIgY29ubmVjdGlvbg0KICAgICAgPC94czpkb2N1bWVudGF0
aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6Z3JvdXAgcmVmPSJUcnVzdGVkQ29u
bmVjdGlvbnMiLz4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iVHJ1
c3RlZENvbm5lY3Rpb25zIj4NCiAgICA8eHM6YWxsPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0i
c2VydmVyIiB0eXBlPSJTZXJ2ZXJEZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIxIiBtYXhPY2N1cnM9
IjEiLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9ImRhdGFiYXNlIiB0eXBlPSJEYXRhYmFzZURl
c2NyaXB0aW9uIiBtaW5PY2N1cnM9IjEiIG1heE9jY3Vycz0iMSIvPg0KICAgICAgPHhzOmVsZW1l
bnQgbmFtZT0iZW5jcnlwdCIgdHlwZT0iRW5jcnlwdERlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAi
IG1heE9jY3Vycz0iMSIvPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0idHJ1c3Qtc2VydmVyLWNl
cnRpZmljYXRlIiB0eXBlPSJUcnVzdFNlcnZlckNlcnRpZmljYXRlRGVzY3JpcHRpb24iIG1pbk9j
Y3Vycz0iMCIgbWF4T2NjdXJzPSIxIi8+DQogICAgPC94czphbGw+DQogIDwveHM6Z3JvdXA+DQoN
CiAgPHhzOmdyb3VwIG5hbWU9Ik5vblRydXN0ZWRDb25uZWN0aW9ucyI+DQogICAgPHhzOmFsbD4N
CiAgICAgIDx4czplbGVtZW50IG5hbWU9InNlcnZlciIgdHlwZT0iU2VydmVyRGVzY3JpcHRpb24i
IG1pbk9jY3Vycz0iMSIgbWF4T2NjdXJzPSIxIi8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJk
YXRhYmFzZSIgdHlwZT0iRGF0YWJhc2VEZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIxIiBtYXhPY2N1
cnM9IjEiLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9InVzZXItaWQiIHR5cGU9IlVzZXJJRERl
c2NyaXB0aW9uIiBtaW5PY2N1cnM9IjEiIG1heE9jY3Vycz0iMSIvPg0KICAgICAgPHhzOmVsZW1l
bnQgbmFtZT0icGFzc3dvcmQiIHR5cGU9IlBhc3N3b3JkRGVzY3JpcHRpb24iIG1pbk9jY3Vycz0i
MCIgbWF4T2NjdXJzPSIxIi8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJlbmNyeXB0IiB0eXBl
PSJFbmNyeXB0RGVzY3JpcHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSIxIi8+DQogICAg
ICA8eHM6ZWxlbWVudCBuYW1lPSJ0cnVzdC1zZXJ2ZXItY2VydGlmaWNhdGUiIHR5cGU9IlRydXN0
U2VydmVyQ2VydGlmaWNhdGVEZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9IjEi
Lz4NCiAgICA8L3hzOmFsbD4NCiAgPC94czpncm91cD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFt
ZT0iU2VydmVyRGVzY3JpcHRpb24iPg0KICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRv
Y3VtZW50YXRpb24+DQogICAgICAgIE5hbWUgb2YgdGhlIFNxbCBTZXJ2ZXIgaW5zdGFuY2UNCiAg
ICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQogICAgPHhzOmF0
dHJpYnV0ZSBuYW1lPSJ2YWx1ZSIgdHlwZT0ieHM6c3RyaW5nIiB1c2U9InJlcXVpcmVkIi8+DQog
IDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IkRhdGFiYXNlRGVz
Y3JpcHRpb24iPg0KICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+
DQogICAgICAgIE5hbWUgb2YgdGhlIERhdGFiYXNlIGluIHRoZSBnaXZlbiBpbnN0YW5jZQ0KICAg
ICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6YXR0
cmlidXRlIG5hbWU9InZhbHVlIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0icmVxdWlyZWQiLz4NCiAg
PC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iVXNlcklERGVzY3Jp
cHRpb24iPg0KICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+DQog
ICAgICAgIFVzZXIgSUQgZm9yIGNvbm5lY3RpbmcgdG8gdGhlIHNlcnZlciBpbnN0YW5jZQ0KICAg
ICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6YXR0
cmlidXRlIG5hbWU9InZhbHVlIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0icmVxdWlyZWQiLz4NCiAg
PC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iUGFzc3dvcmREZXNj
cmlwdGlvbiI+DQogICAgPHhzOmFubm90YXRpb24+DQogICAgICA8eHM6ZG9jdW1lbnRhdGlvbj4N
CiAgICAgICAgUGFzc3dvcmQgZm9yIGNvbm5lY3RpbmcgdG8gdGhlIHNlcnZlciBpbnN0YW5jZQ0K
ICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6
YXR0cmlidXRlIG5hbWU9InZhbHVlIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0icmVxdWlyZWQiLz4N
CiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iRW5jcnlwdERl
c2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9u
Pg0KICAgICAgICBVc2UgYW4gZW5jcnlwdGVkIGNvbm5lY3Rpb24gLSB0cnVlIHwgZmFsc2UgfCAk
dmFyaWFibGUtbmFtZSQNCiAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90
YXRpb24+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJ2YWx1ZSIgdXNlPSJyZXF1aXJlZCI+DQog
ICAgICA8eHM6c2ltcGxlVHlwZT4NCiAgICAgICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0
cmluZyI+DQogICAgICAgICAgPHhzOnBhdHRlcm4gdmFsdWU9IihcJFthLXpBLVowLTldKChbYS16
QS1aMC05K1wtX1woXClcKiZhbXA7XF5cJSNAIVxzXSkqKVwkKSIvPg0KICAgICAgICAgIDx4czpw
YXR0ZXJuIHZhbHVlPSJ0cnVlfGZhbHNlIi8+DQogICAgICAgIDwveHM6cmVzdHJpY3Rpb24+DQog
ICAgICA8L3hzOnNpbXBsZVR5cGU+DQogICAgPC94czphdHRyaWJ1dGU+DQogIDwveHM6Y29tcGxl
eFR5cGU+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlRydXN0U2VydmVyQ2VydGlmaWNhdGVE
ZXNjcmlwdGlvbiI+DQogICAgPHhzOmFubm90YXRpb24+DQogICAgICA8eHM6ZG9jdW1lbnRhdGlv
bj4NCiAgICAgICAgVHJ1c3QgU2VydmVyIENlcnRpZmljYXRlIGZvciBlbmN5cHRpb24gLSB0cnVl
IHwgZmFsc2UgfCAkdmFyaWFibGUtbmFtZSQNCiAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAg
ICA8L3hzOmFubm90YXRpb24+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJ2YWx1ZSIgdXNlPSJy
ZXF1aXJlZCI+DQogICAgICA8eHM6c2ltcGxlVHlwZT4NCiAgICAgICAgPHhzOnJlc3RyaWN0aW9u
IGJhc2U9InhzOnN0cmluZyI+DQogICAgICAgICAgPHhzOnBhdHRlcm4gdmFsdWU9IihcJFthLXpB
LVowLTldKChbYS16QS1aMC05K1wtX1woXClcKiZhbXA7XF5cJSNAIVxzXSkqKVwkKSIvPg0KICAg
ICAgICAgIDx4czpwYXR0ZXJuIHZhbHVlPSJ0cnVlfGZhbHNlIi8+DQogICAgICAgIDwveHM6cmVz
dHJpY3Rpb24+DQogICAgICA8L3hzOnNpbXBsZVR5cGU+DQogICAgPC94czphdHRyaWJ1dGU+DQog
IDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPCEtLSBTRVJWRVJTIGRlZmluaXRpb24gLS0+DQoNCiAg
PCEtLSBDT05GSUcgc2NoZW1hIGRlZmluaXRpb24gLS0+DQogIDx4czpjb21wbGV4VHlwZSBuYW1l
PSJDb25maWd1cmF0aW9uQ29tbWFuZERlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4N
CiAgICAgIDx4czpkb2N1bWVudGF0aW9uPlNTTUEgQ29uc29sZSBzY3JpcHQgY29uZmlndXJhdGlv
bjwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQogICAgPHhzOmNob2lj
ZSBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0iMSI+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJDb25m
aWdDb21tYW5kc0dyb3VwIi8+DQogICAgPC94czpjaG9pY2U+DQogIDwveHM6Y29tcGxleFR5cGU+
DQoNCiAgPHhzOmdyb3VwIG5hbWU9IkNvbmZpZ0NvbW1hbmRzR3JvdXAiPg0KICAgIDx4czpjaG9p
Y2U+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJvdXRwdXQtcHJvdmlkZXJzIiB0eXBlPSJPdXRw
dXRQcm92aWRlcnNEZXNjcmlwdGlvbiIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3Vw
Pg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJPdXRwdXRQcm92aWRlcnNEZXNjcmlwdGlvbiI+
DQogICAgPHhzOmNob2ljZSBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIj4NCiAg
ICAgIDx4czpncm91cCByZWY9Ik91dHB1dFdpbmRvd1Byb3ZpZGVycyIvPg0KICAgICAgPHhzOmdy
b3VwIHJlZj0iRGF0YU1pZ3JhdGlvbkNvbm5lY3Rpb25Qcm92aWRlcnMiLz4NCiAgICAgIDx4czpn
cm91cCByZWY9IkNvbGxlY3RvckVycm9yUHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVm
PSJDb252ZXJ0V29ya3NwYWNlUHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJTeW5j
aHJvbml6YXRpb25EZWNpc2lvblByb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iUmVj
b25uZWN0TWFuYWdlclByb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iQ29udmVydGVy
T2JqZWN0T3ZlcndyaXRlUHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJQcmVyZXF1
aXNpdGVQcm92aWRlcnMiLz4NCiAgICAgIDx4czpncm91cCByZWY9IlByb2dyZXNzUmVwb3J0aW5n
UHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJMb2dWZXJib3NpdHlQcm92aWRlcnMi
Lz4NCiAgICAgIDx4czpncm91cCByZWY9IkVuY3J5cHRlZFBhc3N3b3JkUHJvdmlkZXJzIi8+DQog
ICAgPC94czpjaG9pY2U+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5hbWU9
IkVuY3J5cHRlZFBhc3N3b3JkUHJvdmlkZXJzIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhz
OmVsZW1lbnQgbmFtZT0iZW5jcnlwdGVkLXBhc3N3b3JkIiB0eXBlPSJFbmNyeXB0ZWRQYXNzd29y
ZERlc2NyaXB0aW9uIi8+DQogICAgPC94czpjaG9pY2U+DQogIDwveHM6Z3JvdXA+DQoNCiAgPHhz
OmNvbXBsZXhUeXBlIG5hbWU9IkVuY3J5cHRlZFBhc3N3b3JkRGVzY3JpcHRpb24iPg0KICAgIDx4
czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+DQogICAgICAgIE92ZXJyaWRl
IGVuY3J5cHRlZCBwYXNzd29yZCBpbiBzdG9yYWdlIHdpdGggdGhhdCBpbiBzY3JpcHQgZmlsZQ0K
ICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6
YXR0cmlidXRlIG5hbWU9Im92ZXJyaWRlIiB0eXBlPSJCb29sZWFuVHJ1ZUZhbHNlVHlwZURlc2Ny
aXB0aW9uIj4NCiAgICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlv
bj4NCiAgICAgICAgICBvdmVycmlkZSAtIHRydWUgfCBmYWxzZSB8ICR2YXJpYWJsZS1uYW1lJA0K
ICAgICAgICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICA8L3hzOmFubm90YXRpb24+DQogICAg
PC94czphdHRyaWJ1dGU+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5hbWU9
IkxvZ1ZlcmJvc2l0eVByb3ZpZGVycyI+DQogICAgPHhzOmNob2ljZT4NCiAgICAgIDx4czplbGVt
ZW50IG5hbWU9ImxvZy12ZXJib3NpdHkiIHR5cGU9IkxvZ1ZlcmJvc2l0eURlc2NyaXB0aW9uIi8+
DQogICAgPC94czpjaG9pY2U+DQogIDwveHM6Z3JvdXA+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5h
bWU9IkxvZ1ZlcmJvc2l0eURlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAg
IDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICBTZXQgbG9nZ2luZyB2ZXJib3NpdHkgbGV2ZWxz
DQogICAgICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0KICAgIDx4
czphdHRyaWJ1dGUgbmFtZT0ibGV2ZWwiPg0KICAgICAgPHhzOmFubm90YXRpb24+DQogICAgICAg
IDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICAgIExldmVsIG9mIGxvZ2dpbmcgLSBmYXRhbC1l
cnJvciB8IGVycm9yIHwgd2FybmluZyB8IGRlYnVnIHwgaW5mbyB8ICR2YXJpYWJsZS1uYW1lJA0K
ICAgICAgICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICA8L3hzOmFubm90YXRpb24+DQogICAg
ICA8eHM6c2ltcGxlVHlwZT4NCiAgICAgICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmlu
ZyI+DQogICAgICAgICAgPHhzOnBhdHRlcm4gdmFsdWU9IihcJFthLXpBLVowLTldKChbYS16QS1a
MC05K1wtX1woXClcKiZhbXA7XF5cJSNAIVxzXSkqKVwkKSIvPg0KICAgICAgICAgIDx4czpwYXR0
ZXJuIHZhbHVlPSJmYXRhbC1lcnJvcnxlcnJvcnx3YXJuaW5nfGluZm98ZGVidWciLz4NCiAgICAg
ICAgPC94czpyZXN0cmljdGlvbj4NCiAgICAgIDwveHM6c2ltcGxlVHlwZT4NCiAgICA8L3hzOmF0
dHJpYnV0ZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iT3V0cHV0
V2luZG93UHJvdmlkZXJzIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFt
ZT0ib3V0cHV0LXdpbmRvdyIgdHlwZT0iT3V0cHV0V2luZG93UHJvdmlkZXJEZXNjcmlwdGlvbiIv
Pg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQogIDx4czpjb21wbGV4VHlwZSBu
YW1lPSJPdXRwdXRXaW5kb3dQcm92aWRlckRlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlv
bj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICBPdXRwdXQgd2luZG93IG9wdGlv
bnMNCiAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQogICAg
PHhzOmF0dHJpYnV0ZSBuYW1lPSJzdXBwcmVzcy1tZXNzYWdlcyIgdHlwZT0iQm9vbGVhblRydWVG
YWxzZVR5cGVEZXNjcmlwdGlvbiI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhz
OmRvY3VtZW50YXRpb24+DQogICAgICAgICAgU3VwcHJlc3MgbWVzc2FnZXMgZnJvbSBiZWluZyBk
aXNwbGF5ZWQgaW4gdGhlIG91dHB1dCB3aW5kb3cgLSB0cnVlIHwgZmFsc2UgfCAkdmFyaWFibGUt
dmFsdWUkDQogICAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlv
bj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9ImRlc3RpbmF0
aW9uIj4NCiAgICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5U
aGUgZGVzdGluYXRpb24gZm9yIG91dHB1dCBtZXNzYWdlcyAtIGZpbGUgfCBzdGRvdXQgfCAkdmFy
aWFibGUtdmFsdWUkPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0K
ICAgICAgPHhzOnNpbXBsZVR5cGU+DQogICAgICAgIDx4czpyZXN0cmljdGlvbiBiYXNlPSJ4czpz
dHJpbmciPg0KICAgICAgICAgIDx4czpwYXR0ZXJuIHZhbHVlPSIoXCRbYS16QS1aMC05XSgoW2Et
ekEtWjAtOStcLV9cKFwpXComYW1wO1xeXCUjQCFcc10pKilcJCkiLz4NCiAgICAgICAgICA8eHM6
cGF0dGVybiB2YWx1ZT0iZmlsZXxzdGRvdXQiLz4NCiAgICAgICAgPC94czpyZXN0cmljdGlvbj4N
CiAgICAgIDwveHM6c2ltcGxlVHlwZT4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6YXR0
cmlidXRlIG5hbWU9ImZpbGUtbmFtZSIgdHlwZT0ieHM6c3RyaW5nIj4NCiAgICAgIDx4czphbm5v
dGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5UaGUgcGF0aCBvZiB0aGUgZmlsZSB0
byBzdG9yZSB0aGUgb3V0cHV0IG1lc3NhZ2VzIGlmIGRlc3RpbmF0aW9uIGlzICJmaWxlIjwveHM6
ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0
ZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iRGF0YU1pZ3JhdGlv
bkNvbm5lY3Rpb25Qcm92aWRlcnMiPg0KICAgIDx4czpjaG9pY2U+DQogICAgICA8eHM6ZWxlbWVu
dCBuYW1lPSJkYXRhLW1pZ3JhdGlvbi1jb25uZWN0aW9uIiB0eXBlPSJEYXRhTWlncmF0aW9uQ29u
bmVjdGlvblByb3ZpZGVyRGVzY3JpcHRpb24iLz4NCiAgICA8L3hzOmNob2ljZT4NCiAgPC94czpn
cm91cD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iRGF0YU1pZ3JhdGlvbkNvbm5lY3Rpb25Q
cm92aWRlckRlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1
bWVudGF0aW9uPg0KICAgICAgICBDb25uZWN0aW9uIGluZm9ybWF0aW9uIHVzZWQgZm9yIGRhdGEg
bWlncmF0aW9uDQogICAgICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9u
Pg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ic291cmNlLXVzZS1sYXN0LXVzZWQiIHR5cGU9IkJv
b2xlYW5UcnVlRmFsc2VUeXBlRGVzY3JpcHRpb24iPg0KICAgICAgPHhzOmFubm90YXRpb24+DQog
ICAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICAgIFVzZSB0aGUgbGFzdCB1c2VkIHNv
dXJjZSBjb25uZWN0aW9uIGluZm9ybWF0aW9uIC0gdHJ1ZSB8IGZhbHNlIHwgJHZhcmlhYmxlLXZh
bHVlJA0KICAgICAgICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICA8L3hzOmFubm90YXRpb24+
DQogICAgPC94czphdHRyaWJ1dGU+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJ0YXJnZXQtdXNl
LWxhc3QtdXNlZCIgdHlwZT0iQm9vbGVhblRydWVGYWxzZVR5cGVEZXNjcmlwdGlvbiI+DQogICAg
ICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+DQogICAgICAgICAg
VXNlIHRoZSBsYXN0IHVzZWQgdGFyZ2V0IGNvbm5lY3Rpb24gaW5mb3JtYXRpb24gLSB0cnVlIHwg
ZmFsc2UgfCAkdmFyaWFibGUtdmFsdWUkDQogICAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAg
ICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6YXR0cmli
dXRlIG5hbWU9InNvdXJjZS1zZXJ2ZXIiIHR5cGU9InhzOnN0cmluZyI+DQogICAgICA8eHM6YW5u
b3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+DQogICAgICAgICAgVGhlIG5hbWUg
b2YgdGhlIHNvdXJjZSBzZXJ2ZXIgYXMgbWVudGlvbmVkIGluIHRoZSBTZXJ2ZXJzIHNlY3Rpb24N
CiAgICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAg
IDwveHM6YXR0cmlidXRlPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0idGFyZ2V0LXNlcnZlciIg
dHlwZT0ieHM6c3RyaW5nIj4NCiAgICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9j
dW1lbnRhdGlvbj4NCiAgICAgICAgICBUaGUgbmFtZSBvZiB0aGUgdGFyZ2V0IHNlcnZlciBhcyBt
ZW50aW9uZWQgaW4gdGhlIFNlcnZlcnMgc2VjdGlvbg0KICAgICAgICA8L3hzOmRvY3VtZW50YXRp
b24+DQogICAgICA8L3hzOmFubm90YXRpb24+DQogICAgPC94czphdHRyaWJ1dGU+DQogIDwveHM6
Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5hbWU9IkNvbGxlY3RvckVycm9yUHJvdmlkZXJz
Ij4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0idXNlci1pbnB1dC1w
b3B1cCIgdHlwZT0iQ29sbGVjdG9yRXJyb3JQcm92aWRlckRlc2NyaXB0aW9uIi8+DQogICAgPC94
czpjaG9pY2U+DQogIDwveHM6Z3JvdXA+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IkNvbGxl
Y3RvckVycm9yUHJvdmlkZXJEZXNjcmlwdGlvbiI+DQogICAgPHhzOmFubm90YXRpb24+DQogICAg
ICA8eHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgICAgQ29sbGVjdG9yIGZhaWx1cmUgb3B0aW9ucw0K
ICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6
YXR0cmlidXRlIG5hbWU9Im1vZGUiIHVzZT0icmVxdWlyZWQiPg0KICAgICAgPHhzOmFubm90YXRp
b24+DQogICAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICAgIEFjdGlvbiB0byBiZSB0
YWtlbiB3aGVuIHNjaGVtYSBjb2xsZWN0b3IgZmFpbHMgLSBhc2stdXNlciB8IGNvbnRpbnVlIHwg
ZXJyb3IgfCAkdmFyaWFibGUtdmFsdWUkDQogICAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAg
ICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpzaW1wbGVUeXBlPg0KICAgICAgICA8eHM6
cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4NCiAgICAgICAgICA8eHM6cGF0dGVybiB2YWx1
ZT0iY29udGludWV8ZXJyb3J8YXNrLXVzZXIiLz4NCiAgICAgICAgICA8eHM6cGF0dGVybiB2YWx1
ZT0iKFwkW2EtekEtWjAtOV0oKFthLXpBLVowLTkrXC1fXChcKVwqJmFtcDtcXlwlI0AhXHNdKSop
XCQpIi8+DQogICAgICAgIDwveHM6cmVzdHJpY3Rpb24+DQogICAgICA8L3hzOnNpbXBsZVR5cGU+
DQogICAgPC94czphdHRyaWJ1dGU+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3Vw
IG5hbWU9IkNvbnZlcnRXb3Jrc3BhY2VQcm92aWRlcnMiPg0KICAgIDx4czpjaG9pY2U+DQogICAg
ICA8eHM6ZWxlbWVudCBuYW1lPSJ1cGdyYWRlLXByb2plY3QiIHR5cGU9IkNvbnZlcnRXb3Jrc3Bh
Y2VQcm92aWRlckRlc2NyaXB0aW9uIi8+DQogICAgPC94czpjaG9pY2U+DQogIDwveHM6Z3JvdXA+
DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IkNvbnZlcnRXb3Jrc3BhY2VQcm92aWRlckRlc2Ny
aXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0K
ICAgICAgICBQcm9qZWN0IHVwZ3JhZGF0aW9uIHNldHRpbmdzDQogICAgICA8L3hzOmRvY3VtZW50
YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0iYWN0
aW9uIiB1c2U9InJlcXVpcmVkIj4NCiAgICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6
ZG9jdW1lbnRhdGlvbj4NCiAgICAgICAgICBBY3Rpb24gdG8gYmUgdGFrZW4gd2hlbiB0aGVyZSBp
cyBhIG5lZWQgdG8gdXBncmFkZSBwcm9qZWN0IC0gYXNrLXVzZXIgfCB5ZXMgfCBubyB8ICR2YXJp
YWJsZS12YWx1ZSQNCiAgICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5v
dGF0aW9uPg0KICAgICAgPHhzOnNpbXBsZVR5cGU+DQogICAgICAgIDx4czpyZXN0cmljdGlvbiBi
YXNlPSJ4czpzdHJpbmciPg0KICAgICAgICAgIDx4czpwYXR0ZXJuIHZhbHVlPSJhc2stdXNlcnx5
ZXN8bm8iLz4NCiAgICAgICAgICA8eHM6cGF0dGVybiB2YWx1ZT0iKFwkW2EtekEtWjAtOV0oKFth
LXpBLVowLTkrXC1fXChcKVwqJmFtcDtcXlwlI0AhXHNdKSopXCQpIi8+DQogICAgICAgIDwveHM6
cmVzdHJpY3Rpb24+DQogICAgICA8L3hzOnNpbXBsZVR5cGU+DQogICAgPC94czphdHRyaWJ1dGU+
DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5hbWU9IlN5bmNocm9uaXphdGlv
bkRlY2lzaW9uUHJvdmlkZXJzIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmVsZW1lbnQg
bmFtZT0ic3luY2hyb25pemF0aW9uIiB0eXBlPSJTeW5jaHJvbml6YXRpb25EZWNpc2lvblByb3Zp
ZGVyRGVzY3JpcHRpb24iLz4NCiAgICA8L3hzOmNob2ljZT4NCiAgPC94czpncm91cD4NCg0KICA8
eHM6Y29tcGxleFR5cGUgbmFtZT0iU3luY2hyb25pemF0aW9uRGVjaXNpb25Qcm92aWRlckRlc2Ny
aXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0K
ICAgICAgICBTeW5jaHJvbml6YXRpb24gb3B0aW9ucw0KICAgICAgPC94czpkb2N1bWVudGF0aW9u
Pg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InNhZmUtbW9k
ZSIgdHlwZT0iQm9vbGVhblRydWVGYWxzZVR5cGVEZXNjcmlwdGlvbiIgdXNlPSJyZXF1aXJlZCI+
DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+U3luY2hy
b25pemUgaW4gU2FmZSBtb2RlIC0gdHJ1ZSB8IGZhbHNlIHwgJHZhcmlhYmxlLW5hbWUkPC94czpk
b2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgIDwveHM6YXR0cmlidXRl
Pg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KDQogIDx4czpncm91cCBuYW1lPSJSZWNvbm5lY3RNYW5h
Z2VyUHJvdmlkZXJzIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0i
cmVjb25uZWN0LW1hbmFnZXIiIHR5cGU9IlJlY29ubmVjdE1hbmFnZXJQcm92aWRlckRlc2NyaXB0
aW9uIi8+DQogICAgPC94czpjaG9pY2U+DQogIDwveHM6Z3JvdXA+DQoNCiAgPHhzOmNvbXBsZXhU
eXBlIG5hbWU9IlJlY29ubmVjdE1hbmFnZXJQcm92aWRlckRlc2NyaXB0aW9uIj4NCiAgICA8eHM6
YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICBPcHRpb25zIGRl
c2NyaWJpbmcgYWN0aW9ucyB0byBiZSB0YWtlbiBvbiByZS1jb25uZWN0aW9uIHRvIHNvdXJjZSBh
bmQgdGFyZ2V0DQogICAgICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9u
Pg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ib24tc291cmNlLXJlY29ubmVjdCI+DQogICAgICA8
eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+DQogICAgICAgICAgQWN0
aW9uIHRvIGJlIHRha2VuIHdoZW4gc291cmNlIHNlcnZlciByZXF1aXJlcyByZS1jb25uZWN0aW9u
IC0gcmVjb25uZWN0LXRvLWxhc3QtdXNlZC1zZXJ2ZXIgfCBnZW5lcmF0ZS1hbi1lcnJvciB8ICR2
YXJpYWJsZS12YWx1ZSQNCiAgICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czph
bm5vdGF0aW9uPg0KICAgICAgPHhzOnNpbXBsZVR5cGU+DQogICAgICAgIDx4czpyZXN0cmljdGlv
biBiYXNlPSJ4czpzdHJpbmciPg0KICAgICAgICAgIDx4czpwYXR0ZXJuIHZhbHVlPSJyZWNvbm5l
Y3QtdG8tbGFzdC11c2VkLXNlcnZlcnxnZW5lcmF0ZS1hbi1lcnJvciIvPg0KICAgICAgICAgIDx4
czpwYXR0ZXJuIHZhbHVlPSIoXCRbYS16QS1aMC05XSgoW2EtekEtWjAtOStcLV9cKFwpXComYW1w
O1xeXCUjQCFcc10pKilcJCkiLz4NCiAgICAgICAgPC94czpyZXN0cmljdGlvbj4NCiAgICAgIDwv
eHM6c2ltcGxlVHlwZT4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6YXR0cmlidXRlIG5h
bWU9Im9uLXRhcmdldC1yZWNvbm5lY3QiPg0KICAgICAgPHhzOmFubm90YXRpb24+DQogICAgICAg
IDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICAgIEFjdGlvbiB0byBiZSB0YWtlbiB3aGVuIHRh
cmdldCBzZXJ2ZXIgcmVxdWlyZXMgcmUtY29ubmVjdGlvbiAtIHJlY29ubmVjdC10by1sYXN0LXVz
ZWQtc2VydmVyIHwgZ2VuZXJhdGUtYW4tZXJyb3IgfCAkdmFyaWFibGUtdmFsdWUkDQogICAgICAg
IDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpz
aW1wbGVUeXBlPg0KICAgICAgICA8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4NCiAg
ICAgICAgICA8eHM6cGF0dGVybiB2YWx1ZT0icmVjb25uZWN0LXRvLWxhc3QtdXNlZC1zZXJ2ZXJ8
Z2VuZXJhdGUtYW4tZXJyb3IiLz4NCiAgICAgICAgICA8eHM6cGF0dGVybiB2YWx1ZT0iKFwkW2Et
ekEtWjAtOV0oKFthLXpBLVowLTkrXC1fXChcKVwqJmFtcDtcXlwlI0AhXHNdKSopXCQpIi8+DQog
ICAgICAgIDwveHM6cmVzdHJpY3Rpb24+DQogICAgICA8L3hzOnNpbXBsZVR5cGU+DQogICAgPC94
czphdHRyaWJ1dGU+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5hbWU9IkNv
bnZlcnRlck9iamVjdE92ZXJ3cml0ZVByb3ZpZGVycyI+DQogICAgPHhzOmNob2ljZT4NCiAgICAg
IDx4czplbGVtZW50IG5hbWU9Im9iamVjdC1vdmVyd3JpdGUiIHR5cGU9IkNvbnZlcnRlck9iamVj
dE92ZXJ3cml0ZVByb3ZpZGVyRGVzY3JpcHRpb24iLz4NCiAgICA8L3hzOmNob2ljZT4NCiAgPC94
czpncm91cD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iQ29udmVydGVyT2JqZWN0T3Zlcndy
aXRlUHJvdmlkZXJEZXNjcmlwdGlvbiI+DQogICAgPHhzOmFubm90YXRpb24+DQogICAgICA8eHM6
ZG9jdW1lbnRhdGlvbj4NCiAgICAgICAgQWN0aW9uIHRvIGJlIHRha2VuIHdoZW4gc2NoZW1hIGNv
bGxlY3RvciBmYWlscyAtIGFzay11c2VyIHwgY29udGludWUgfCBlcnJvciB8ICR2YXJpYWJsZS12
YWx1ZSQNCiAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQog
ICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJhY3Rpb24iIHVzZT0icmVxdWlyZWQiPg0KICAgICAgPHhz
OmFubm90YXRpb24+DQogICAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICAgIEFjdGlv
biB0byBiZSB0YWtlbiBpZiBvYmplY3QocykgYmVpbmcgY29udmVydGVkIGV4aXN0cyBpbiB0YXJn
ZXQgc2NoZW1hIC0gZXJyb3IgfCBza2lwIHwgb3ZlcndyaXRlIHwgYXNrLXVzZXIgfCAkdmFyaWFi
bGUtbmFtZSQNCiAgICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0
aW9uPg0KICAgICAgPHhzOnNpbXBsZVR5cGU+DQogICAgICAgIDx4czpyZXN0cmljdGlvbiBiYXNl
PSJ4czpzdHJpbmciPg0KICAgICAgICAgIDx4czpwYXR0ZXJuIHZhbHVlPSIoXCRbYS16QS1aMC05
XSgoW2EtekEtWjAtOStcLV9cKFwpXComYW1wO1xeXCUjQCFcc10pKilcJCkiLz4NCiAgICAgICAg
ICA8eHM6cGF0dGVybiB2YWx1ZT0iZXJyb3J8c2tpcHxvdmVyd3JpdGV8YXNrLXVzZXIiLz4NCiAg
ICAgICAgPC94czpyZXN0cmljdGlvbj4NCiAgICAgIDwveHM6c2ltcGxlVHlwZT4NCiAgICA8L3hz
OmF0dHJpYnV0ZT4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iUHJl
cmVxdWlzaXRlUHJvdmlkZXJzIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmVsZW1lbnQg
bmFtZT0icHJlcmVxdWlzaXRlcyIgdHlwZT0iUHJlcmVxdWlzaXRlUHJvdmlkZXJEZXNjcmlwdGlv
biIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQogIDx4czpjb21wbGV4VHlw
ZSBuYW1lPSJQcmVyZXF1aXNpdGVQcm92aWRlckRlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3Rh
dGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICBPcHRpb24gc3BlY2lmeWlu
ZyBhY3Rpb24gdG8gYmUgdGFrZW4gb24gcHJlLXJlcXVpc2l0ZSBmYWlsdXJlcyBkdXJpbmcgY29u
bmVjdGlvbg0KICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4N
CiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InN0cmljdC1tb2RlIiB0eXBlPSJCb29sZWFuVHJ1ZUZh
bHNlVHlwZURlc2NyaXB0aW9uIiB1c2U9InJlcXVpcmVkIj4NCiAgICAgIDx4czphbm5vdGF0aW9u
Pg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5Nb2RlIHRvIHNwZWNpZnkgd2hldGhlciB0byBj
b250aW51ZSBvbiBwcmUtcmVxdWlzaXRlIGZhaWx1cmVzIC0gdHJ1ZSB8IGZhbHNlIHwgJHZhcmlh
YmxlLW5hbWUkPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAg
IDwveHM6YXR0cmlidXRlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KDQogIDx4czpncm91cCBuYW1l
PSJQcm9ncmVzc1JlcG9ydGluZ1Byb3ZpZGVycyI+DQogICAgPHhzOmNob2ljZT4NCiAgICAgIDx4
czplbGVtZW50IG5hbWU9InByb2dyZXNzLXJlcG9ydGluZyIgdHlwZT0iUHJvZ3Jlc3NSZXBvcnRp
bmdQcm92aWRlckRlc2NyaXB0aW9uIi8+DQogICAgPC94czpjaG9pY2U+DQogIDwveHM6Z3JvdXA+
DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlByb2dyZXNzUmVwb3J0aW5nUHJvdmlkZXJEZXNj
cmlwdGlvbiI+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJlbmFibGUiIHR5cGU9IkJvb2xlYW5U
cnVlRmFsc2VUeXBlRGVzY3JpcHRpb24iPg0KICAgICAgPHhzOmFubm90YXRpb24+DQogICAgICAg
IDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICAgIEVuYWJsZSBvcGVyYXRpb24gcHJvZ3Jlc3Mg
cmVwb3J0aW5nIC0gdHJ1ZSB8IGZhbHNlIHwgJHZhcmlhYmxlLW5hbWUkDQogICAgICAgIDwveHM6
ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0
ZT4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InJlcG9ydC1tZXNzYWdlcyIgdHlwZT0iQm9vbGVh
blRydWVGYWxzZVR5cGVEZXNjcmlwdGlvbiI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAg
ICAgPHhzOmRvY3VtZW50YXRpb24+DQogICAgICAgICAgUmVwb3J0IHByb2dyZXNzIG1lc3NhZ2Vz
IC0gdHJ1ZSB8IGZhbHNlIHwgJHZhcmlhYmxlLW5hbWUkDQogICAgICAgIDwveHM6ZG9jdW1lbnRh
dGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8
eHM6YXR0cmlidXRlIG5hbWU9InJlcG9ydC1wcm9ncmVzcyI+DQogICAgICA8eHM6YW5ub3RhdGlv
bj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+DQogICAgICAgICAgUmVwb3J0IHByb2dyZXNz
IGluIHBlcmNlbnRhZ2VzIG9yIHR1cm4gb2ZmIC0gZXZlcnktMSUgfCBldmVyeS0yJSB8IGV2ZXJ5
LTUlIHwgZXZlcnktMTAlIHwgZXZlcnktMjAlIHwgb2ZmIHwgJHZhcmlhYmxlLW5hbWUkDQogICAg
ICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4
czpzaW1wbGVUeXBlPg0KICAgICAgICA8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4N
CiAgICAgICAgICA8eHM6cGF0dGVybiB2YWx1ZT0iKFwkW2EtekEtWjAtOV0oKFthLXpBLVowLTkr
XC1fXChcKVwqJmFtcDtcXlwlI0AhXHNdKSopXCQpIi8+DQogICAgICAgICAgPHhzOnBhdHRlcm4g
dmFsdWU9ImV2ZXJ5LTElfGV2ZXJ5LTIlfGV2ZXJ5LTUlfGV2ZXJ5LTEwJXxldmVyeS0yMCV8b2Zm
Ii8+DQogICAgICAgIDwveHM6cmVzdHJpY3Rpb24+DQogICAgICA8L3hzOnNpbXBsZVR5cGU+DQog
ICAgPC94czphdHRyaWJ1dGU+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPCEtLSBDT05GSUcg
c2NoZW1hIGRlZmluaXRpb24gLS0+DQoNCiAgPCEtLSBTQ1JJUFQgQ09NTUFORFMgZGVmaW5pdGlv
biAtLT4NCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlNjcmlwdENvbW1hbmRzRGVzY3JpcHRpb24i
Pg0KICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+U2NyaXB0IENv
bW1hbmQgU2VxdWVuY2U8L3hzOmRvY3VtZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0K
ICAgIDx4czpjaG9pY2U+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJDb21tYW5kR3JvdXBEZXNjcmlw
dGlvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIvPg0KICAgIDwveHM6Y2hv
aWNlPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KDQogIDx4czpncm91cCBuYW1lPSJDb21tYW5kR3Jv
dXBEZXNjcmlwdGlvbiI+DQogICAgPHhzOmNob2ljZT4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9
ImNyZWF0ZS1uZXctcHJvamVjdCIgdHlwZT0iQ3JlYXRlTmV3UHJvamVjdENvbW1hbmREZXNjcmlw
dGlvbiIgbWluT2NjdXJzPSIxIiBtYXhPY2N1cnM9InVuYm91bmRlZCIgLz4NCiAgICAgIDx4czpl
bGVtZW50IG5hbWU9Im9wZW4tcHJvamVjdCIgdHlwZT0iT3BlblByb2plY3RDb21tYW5kRGVzY3Jp
cHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAgICAgIDx4czpl
bGVtZW50IG5hbWU9InNhdmUtcHJvamVjdCIgdHlwZT0iU2F2ZVByb2plY3RDb21tYW5kRGVzY3Jp
cHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAgICAgIDx4czpl
bGVtZW50IG5hbWU9ImNsb3NlLXByb2plY3QiIHR5cGU9IkNsb3NlUHJvamVjdENvbW1hbmREZXNj
cmlwdGlvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIvPg0KICAgICAgPHhz
OmVsZW1lbnQgbmFtZT0iY29ubmVjdC1zb3VyY2UtZGF0YWJhc2UiIHR5cGU9IkNvbm5lY3Rpb25D
b21tYW5kc0Rlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIj4N
CiAgICAgICAgPHhzOmFubm90YXRpb24+DQogICAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+Q29t
bWFuZCBjb2RlIHRvIGNvbm5lY3QgdG8gdGhlIHNvdXJjZSBzZXJ2ZXIgZnJvbSBTU01BPC94czpk
b2N1bWVudGF0aW9uPg0KICAgICAgICA8L3hzOmFubm90YXRpb24+DQogICAgICA8L3hzOmVsZW1l
bnQ+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJjb25uZWN0LXRhcmdldC1kYXRhYmFzZSIgdHlw
ZT0iQ29ubmVjdGlvbkNvbW1hbmRzRGVzY3JpcHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJz
PSJ1bmJvdW5kZWQiPg0KICAgICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgICA8eHM6ZG9j
dW1lbnRhdGlvbj5Db21tYW5kIGNvZGUgdG8gY29ubmVjdCB0byB0aGUgdGFyZ2V0IHNlcnZlciBm
cm9tIFNTTUE8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAg
ICAgIDwveHM6ZWxlbWVudD4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9InJlY29ubmVjdC1zb3Vy
Y2UtZGF0YWJhc2UiIHR5cGU9IkNvbm5lY3Rpb25Db21tYW5kc0Rlc2NyaXB0aW9uIiBtaW5PY2N1
cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIj4NCiAgICAgICAgPHhzOmFubm90YXRpb24+DQog
ICAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+Q29tbWFuZCBjb2RlIHRvIHJlLWNvbm5lY3QgdG8g
dGhlIHNvdXJjZSBzZXJ2ZXIgZnJvbSBTU01BPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgICA8
L3hzOmFubm90YXRpb24+DQogICAgICA8L3hzOmVsZW1lbnQ+DQogICAgICA8eHM6ZWxlbWVudCBu
YW1lPSJyZWNvbm5lY3QtdGFyZ2V0LWRhdGFiYXNlIiB0eXBlPSJDb25uZWN0aW9uQ29tbWFuZHNE
ZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCI+DQogICAgICAg
IDx4czphbm5vdGF0aW9uPg0KICAgICAgICAgIDx4czpkb2N1bWVudGF0aW9uPkNvbW1hbmQgY29k
ZSB0byByZS1jb25uZWN0IHRvIHRoZSB0YXJnZXQgc2VydmVyIGZyb20gU1NNQTwveHM6ZG9jdW1l
bnRhdGlvbj4NCiAgICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgICAgPC94czplbGVtZW50Pg0K
ICAgICAgPHhzOmVsZW1lbnQgbmFtZT0iZm9yY2UtbG9hZCIgdHlwZT0iRm9yY2VMb2FkQ29tbWFu
ZERlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAg
ICA8eHM6ZWxlbWVudCBuYW1lPSJyZWZyZXNoLWZyb20tZGF0YWJhc2UiIHR5cGU9IlJlZnJlc2hG
cm9tRGF0YWJhc2VDb21tYW5kRGVzY3JpcHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1
bmJvdW5kZWQiLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9InN5bmNocm9uaXplLXRhcmdldCIg
dHlwZT0iU3luY2hyb25pemVUYXJnZXRDb21tYW5kRGVzY3JpcHRpb24iIG1pbk9jY3Vycz0iMCIg
bWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9InNhdmUtYXMt
c2NyaXB0IiB0eXBlPSJTYXZlQXNTY3JpcHRDb21tYW5kRGVzY3JpcHRpb24iIG1pbk9jY3Vycz0i
MCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9ImNvbnZl
cnQtc2NoZW1hIiB0eXBlPSJDb252ZXJ0U2NoZW1hQ29tbWFuZERlc2NyaXB0aW9uIiBtaW5PY2N1
cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJn
ZW5lcmF0ZS1hc3Nlc3NtZW50LXJlcG9ydCIgdHlwZT0iR2VuZXJhdGVBc3Nlc3NtZW50UmVwb3J0
Q29tbWFuZERlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+
DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJtYXAtc2NoZW1hIiB0eXBlPSJTY2hlbWFNYXBwaW5n
Q29tbWFuZERlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+
DQogICAgICA8eHM6ZWxlbWVudCBuYW1lPSJtaWdyYXRlLWRhdGEiIHR5cGU9IkRhdGFNaWdyYXRp
b25Db21tYW5kRGVzY3JpcHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQi
Lz4NCiAgICAgIDx4czplbGVtZW50IG5hbWU9ImNvbnZlcnQtc3FsLXN0YXRlbWVudCIgdHlwZT0i
Q29udmVydFRvVFNxbENvbW1hbmREZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9
InVuYm91bmRlZCIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQogIDx4czpj
b21wbGV4VHlwZSBuYW1lPSJDb252ZXJ0VG9UU3FsQ29tbWFuZERlc2NyaXB0aW9uIj4NCiAgICA8
eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPkNvbW1hbmQgY29kZSB0byBw
ZXJmb3JtIGNvbnZlcnNpb24gb2YgYSBnaXZlbiBTUUwgc3RhdGVtZW50PC94czpkb2N1bWVudGF0
aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmdy
b3VwIHJlZj0iQ29udmVydFRvVFNxbENvbW1hbmRHcm91cERlc2NyaXB0aW9uIiBtaW5PY2N1cnM9
IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgPC94czpjaG9pY2U+DQogICAgPHhzOmF0
dHJpYnV0ZUdyb3VwIHJlZj0iTG9nZ2luZ0FuZFJlcG9ydGluZ0F0dHJpYnV0ZXMiLz4NCiAgICA8
eHM6YXR0cmlidXRlR3JvdXAgcmVmPSJDb252ZXJzaW9uUmVwb3J0QXR0cmlidXRlcyIgLz4NCiAg
ICA8eHM6YXR0cmlidXRlIG5hbWU9ImNvbnRleHQiIHR5cGU9InhzOnN0cmluZyIgdXNlPSJyZXF1
aXJlZCI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+
U2NoZW1hIGNvbnRleHQgZm9yIHRoZSBULVNRTCBzdGF0ZW1lbnQgPC94czpkb2N1bWVudGF0aW9u
Pg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgIDwveHM6YXR0cmlidXRlPg0KICAgIDx4czph
dHRyaWJ1dGUgbmFtZT0iZGVzdGluYXRpb24iPg0KICAgICAgPHhzOmFubm90YXRpb24+DQogICAg
ICAgIDx4czpkb2N1bWVudGF0aW9uPlRoZSBkZXN0aW5hdGlvbiBmb3IgdGhlIGNvbnZlcnRlZCBU
LVNRTCBzdGF0ZW1lbnQgLSBmaWxlIHwgc3Rkb3V0IHwgJHZhcmlhYmxlLXZhbHVlJDwveHM6ZG9j
dW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpzaW1wbGVUeXBl
Pg0KICAgICAgICA8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4NCiAgICAgICAgICA8
eHM6cGF0dGVybiB2YWx1ZT0iKFwkW2EtekEtWjAtOV0oKFthLXpBLVowLTkrXC1fXChcKVwqJmFt
cDtcXlwlI0AhXHNdKSopXCQpIi8+DQogICAgICAgICAgPHhzOnBhdHRlcm4gdmFsdWU9ImZpbGV8
c3Rkb3V0Ii8+DQogICAgICAgIDwveHM6cmVzdHJpY3Rpb24+DQogICAgICA8L3hzOnNpbXBsZVR5
cGU+DQogICAgPC94czphdHRyaWJ1dGU+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJ3cml0ZS1j
b252ZXJ0ZWQtc3FsLXRvIiB0eXBlPSJ4czpzdHJpbmciPg0KICAgICAgPHhzOmFubm90YXRpb24+
DQogICAgICAgIDx4czpkb2N1bWVudGF0aW9uPlRoZSBwYXRoIG9mIHRoZSBmaWxlIHRvIHN0b3Jl
IHRoZSBjb252ZXJ0ZWQgVC1TUUwgd2hlbiBkZXN0aW5hdGlvbiBpcyAiZmlsZSI8L3hzOmRvY3Vt
ZW50YXRpb24+DQogICAgICA8L3hzOmFubm90YXRpb24+DQogICAgPC94czphdHRyaWJ1dGU+DQog
ICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJzcWwiIHR5cGU9InhzOnN0cmluZyI+DQogICAgICA8eHM6
YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+SW5kaXZpZHVhbCBULVNRTCBz
dGF0ZW1lbnQgdGhhdCBuZWVkcyB0byBiZSBjb252ZXJ0ZWQ8L3hzOmRvY3VtZW50YXRpb24+DQog
ICAgICA8L3hzOmFubm90YXRpb24+DQogICAgPC94czphdHRyaWJ1dGU+DQogICAgPHhzOmF0dHJp
YnV0ZSBuYW1lPSJzcWwtZmlsZXMiIHR5cGU9InhzOnN0cmluZyI+DQogICAgICA8eHM6YW5ub3Rh
dGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+VGhlIHBhdGggb2YgdGhlIGZpbGUgd2hl
cmUgdGhlIFQtU1FMIHN0YXRlbWVudCB0aGF0IG5lZWRzIHRvIGJlIGNvbnZlcnRlZCBpcyBzdG9y
ZWQ8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICA8L3hzOmFubm90YXRpb24+DQogICAgPC94czph
dHRyaWJ1dGU+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5hbWU9IkNvbnZl
cnRUb1RTcWxDb21tYW5kR3JvdXBEZXNjcmlwdGlvbiI+DQogICAgPHhzOmNob2ljZT4NCiAgICAg
IDx4czpncm91cCByZWY9Ik1ldGFiYXNlT2JqZWN0c0Rlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAi
IG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJQcm9ncmVzc1Jl
cG9ydGluZ1Byb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iT3V0cHV0V2luZG93UHJv
dmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJDb252ZXJ0ZXJPYmplY3RPdmVyd3JpdGVQ
cm92aWRlcnMiLz4NCiAgICAgIDx4czpncm91cCByZWY9IkxvZ1ZlcmJvc2l0eVByb3ZpZGVycyIv
Pg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQogIDx4czpjb21wbGV4VHlwZSBu
YW1lPSJEYXRhTWlncmF0aW9uQ29tbWFuZERlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlv
bj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPkNvbW1hbmQgY29kZSB0byBtaWdyYXRlIGRhdGEg
ZnJvbSBzb3VyY2UgdG8gdGFyZ2V0IHNlcnZlcjwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hz
OmFubm90YXRpb24+DQogICAgPHhzOmNob2ljZSBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5i
b3VuZGVkIj4NCiAgICAgIDx4czpncm91cCByZWY9IkRhdGFNaWdyYXRpb25Db21tYW5kR3JvdXAi
Lz4NCiAgICA8L3hzOmNob2ljZT4NCiAgICA8eHM6YXR0cmlidXRlR3JvdXAgcmVmPSJMb2dnaW5n
QW5kUmVwb3J0aW5nQXR0cmlidXRlcyIvPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ib2JqZWN0
LW5hbWUiIHR5cGU9InhzOnN0cmluZyI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAg
PHhzOmRvY3VtZW50YXRpb24+TmFtZSBvZiB0aGUgdGFibGUgbWV0YWJhc2Ugb2JqZWN0IHdob3Nl
IGRhdGEgbmVlZHMgdG8gYmUgbWlncmF0ZWQ8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICA8L3hz
OmFubm90YXRpb24+DQogICAgPC94czphdHRyaWJ1dGU+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1l
PSJvYmplY3QtdHlwZSIgdHlwZT0iTWV0YWJhc2VPYmplY3RDYXRlZ29yaWVzIi8+DQogIDwveHM6
Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5hbWU9IkRhdGFNaWdyYXRpb25Db21tYW5kR3Jv
dXAiPg0KICAgIDx4czpjaG9pY2U+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJNZXRhYmFzZU9iamVj
dHNEZXNjcmlwdGlvbiIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIvPg0KICAg
ICAgPHhzOmdyb3VwIHJlZj0iRGF0YU1pZ3JhdGlvbkNvbm5lY3Rpb25Qcm92aWRlcnMiIG1pbk9j
Y3Vycz0iMCIgbWF4T2NjdXJzPSIxIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJQcm9ncmVzc1Jl
cG9ydGluZ1Byb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iUHJlcmVxdWlzaXRlUHJv
dmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJPdXRwdXRXaW5kb3dQcm92aWRlcnMiLz4N
CiAgICAgIDx4czpncm91cCByZWY9IkxvZ1ZlcmJvc2l0eVByb3ZpZGVycyIvPg0KICAgIDwveHM6
Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJTY2hlbWFN
YXBwaW5nQ29tbWFuZERlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4
czpkb2N1bWVudGF0aW9uPg0KICAgICAgICBDb21tYW5kIGNvZGUgdG8gbWFwIFNvdXJjZSBhbmQg
VGFyZ2V0IFNjaGVtYQ0KICAgICAgPC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3Rh
dGlvbj4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InNvdXJjZS1zY2hlbWEiIHVzZT0icmVxdWly
ZWQiIHR5cGU9InhzOnN0cmluZyI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhz
OmRvY3VtZW50YXRpb24+DQogICAgICAgICAgU291cmNlIHNjaGVtYSBuYW1lDQogICAgICAgIDwv
eHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJp
YnV0ZT4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InNxbC1zZXJ2ZXItc2NoZW1hIiB1c2U9InJl
cXVpcmVkIiB0eXBlPSJ4czpzdHJpbmciPg0KICAgICAgPHhzOmFubm90YXRpb24+DQogICAgICAg
IDx4czpkb2N1bWVudGF0aW9uPg0KICAgICAgICAgIFRhcmdldCBzY2hlbWEgbmFtZQ0KICAgICAg
ICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICA8L3hzOmFubm90YXRpb24+DQogICAgPC94czph
dHRyaWJ1dGU+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9
IkNvbm5lY3Rpb25Db21tYW5kc0Rlc2NyaXB0aW9uIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAg
PHhzOmdyb3VwIHJlZj0iQ29ubmVjdGlvbkNvbW1hbmRzR3JvdXBEZXNjcmlwdGlvbiIgbWluT2Nj
dXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICAgIDx4
czphdHRyaWJ1dGUgbmFtZT0ic2VydmVyIiB1c2U9InJlcXVpcmVkIiB0eXBlPSJ4czpzdHJpbmci
Lz4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Z3JvdXAgbmFtZT0iQ29ubmVjdGlvbkNv
bW1hbmRzR3JvdXBEZXNjcmlwdGlvbiI+DQogICAgPHhzOmNob2ljZT4NCiAgICAgIDx4czpncm91
cCByZWY9Ik91dHB1dFdpbmRvd1Byb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iQ29s
bGVjdG9yRXJyb3JQcm92aWRlcnMiLz4NCiAgICAgIDx4czpncm91cCByZWY9IlByZXJlcXVpc2l0
ZVByb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iUHJvZ3Jlc3NSZXBvcnRpbmdQcm92
aWRlcnMiLz4NCiAgICAgIDx4czpncm91cCByZWY9IkVuY3J5cHRlZFBhc3N3b3JkUHJvdmlkZXJz
Ii8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJMb2dWZXJib3NpdHlQcm92aWRlcnMiLz4NCiAgICA8
L3hzOmNob2ljZT4NCiAgPC94czpncm91cD4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iR2Vu
ZXJhdGVBc3Nlc3NtZW50UmVwb3J0Q29tbWFuZERlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3Rh
dGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPkNvbW1hbmQgY29kZSB0byBnZW5lcmF0ZSBB
c3Nlc3NtZW50IFJlcG9ydCBmb3IgZ2l2ZW4gbWV0YWJhc2Ugbm9kZShzKTwveHM6ZG9jdW1lbnRh
dGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQogICAgPHhzOmNob2ljZSBtYXhPY2N1cnM9InVu
Ym91bmRlZCIgbWluT2NjdXJzPSIwIj4NCiAgICAgIDx4czpncm91cCByZWY9IkdlbmVyYXRlQXNz
ZXNzbWVudFJlcG9ydENvbW1hbmRHcm91cCIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91
bmRlZCIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICAgIDx4czphdHRyaWJ1dGVHcm91cCByZWY9Ikxv
Z2dpbmdBbmRSZXBvcnRpbmdBdHRyaWJ1dGVzIi8+DQogICAgPHhzOmF0dHJpYnV0ZUdyb3VwIHJl
Zj0iQXNzZXNzbWVudFJlcG9ydEF0dHJpYnV0ZXMiIC8+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1l
PSJvYmplY3QtbmFtZSIgdHlwZT0ieHM6c3RyaW5nIj4NCiAgICAgIDx4czphbm5vdGF0aW9uPg0K
ICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5OYW1lIG9mIHRoZSBNZXRhYmFzZSBvYmplY3QgZm9y
IHdoaWNoIEFzc2Vzc21lbnQgUmVwb3J0IGlzIHRvIGJlIGdlbmVyYXRlZDwveHM6ZG9jdW1lbnRh
dGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8
eHM6YXR0cmlidXRlIG5hbWU9Im9iamVjdC10eXBlIiB0eXBlPSJNZXRhYmFzZU9iamVjdENhdGVn
b3JpZXMiLz4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0i
Q29udmVydFNjaGVtYUNvbW1hbmREZXNjcmlwdGlvbiI+DQogICAgPHhzOmFubm90YXRpb24+DQog
ICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5Db21tYW5kIGNvZGUgdG8gcGVyZm9ybSBTY2hlbWEgQ29u
dmVyc2lvbiBvcGVyYXRpb24gZm9yIGdpdmVuIG1ldGFiYXNlIG5vZGUocyk8L3hzOmRvY3VtZW50
YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0KICAgIDx4czpjaG9pY2UgbWF4T2NjdXJzPSJ1
bmJvdW5kZWQiIG1pbk9jY3Vycz0iMCI+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJDb252ZXJ0U2No
ZW1hQ29tbWFuZEdyb3VwIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQog
ICAgPC94czpjaG9pY2U+DQogICAgPHhzOmF0dHJpYnV0ZUdyb3VwIHJlZj0iTG9nZ2luZ0FuZFJl
cG9ydGluZ0F0dHJpYnV0ZXMiLz4NCiAgICA8eHM6YXR0cmlidXRlR3JvdXAgcmVmPSJDb252ZXJz
aW9uUmVwb3J0QXR0cmlidXRlcyIgLz4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9Im9iamVjdC1u
YW1lIiB0eXBlPSJ4czpzdHJpbmciPg0KICAgICAgPHhzOmFubm90YXRpb24+DQogICAgICAgIDx4
czpkb2N1bWVudGF0aW9uPk5hbWUgb2YgdGhlIE1ldGFiYXNlIG9iamVjdCB3aGljaCBuZWVkcyB0
byBiZSBjb252ZXJ0ZWQ8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICA8L3hzOmFubm90YXRpb24+
DQogICAgPC94czphdHRyaWJ1dGU+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJvYmplY3QtdHlw
ZSIgdHlwZT0iTWV0YWJhc2VPYmplY3RDYXRlZ29yaWVzIi8+DQogIDwveHM6Y29tcGxleFR5cGU+
DQoNCiAgPHhzOmdyb3VwIG5hbWU9IkNvbnZlcnRTY2hlbWFDb21tYW5kR3JvdXAiPg0KICAgIDx4
czpjaG9pY2U+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJNZXRhYmFzZU9iamVjdHNEZXNjcmlwdGlv
biIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIvPg0KICAgICAgPHhzOmdyb3Vw
IHJlZj0iQ29udmVydGVyT2JqZWN0T3ZlcndyaXRlUHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3Jv
dXAgcmVmPSJQcm9ncmVzc1JlcG9ydGluZ1Byb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJl
Zj0iT3V0cHV0V2luZG93UHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJMb2dWZXJi
b3NpdHlQcm92aWRlcnMiLz4NCiAgICA8L3hzOmNob2ljZT4NCiAgPC94czpncm91cD4NCg0KICA8
eHM6Z3JvdXAgbmFtZT0iR2VuZXJhdGVBc3Nlc3NtZW50UmVwb3J0Q29tbWFuZEdyb3VwIj4NCiAg
ICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iTWV0YWJhc2VPYmplY3RzRGVzY3Jp
cHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAgICAgIDx4czpn
cm91cCByZWY9IlByb2dyZXNzUmVwb3J0aW5nUHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAg
cmVmPSJPdXRwdXRXaW5kb3dQcm92aWRlcnMiLz4NCiAgICAgIDx4czpncm91cCByZWY9IkxvZ1Zl
cmJvc2l0eVByb3ZpZGVycyIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KDQog
IDx4czphdHRyaWJ1dGVHcm91cCBuYW1lPSJDb252ZXJzaW9uUmVwb3J0QXR0cmlidXRlcyI+DQog
ICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJjb252ZXJzaW9uLXJlcG9ydC1mb2xkZXIiIHR5cGU9Inhz
OnN0cmluZyI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRp
b24+VGhlIHBhdGggb2YgdGhlIGZvbGRlciB3aGVyZSBDb252ZXJzaW9uIFJlcG9ydCB3aWxsIGJl
IHNhdmVkPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgIDwv
eHM6YXR0cmlidXRlPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0iY29udmVyc2lvbi1yZXBvcnQt
b3ZlcndyaXRlIiB0eXBlPSJCb29sZWFuVHJ1ZUZhbHNlVHlwZURlc2NyaXB0aW9uIj4NCiAgICAg
IDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5PdmVyd3JpdGUgZXhp
c3RpbmcgQ29udmVyc2lvbiByZXBvcnRzICAtIHRydWUgfCBmYWxzZSB8ICR2YXJpYWJsZS1uYW1l
JDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0
dHJpYnV0ZT4NCiAgPC94czphdHRyaWJ1dGVHcm91cD4NCg0KICA8eHM6YXR0cmlidXRlR3JvdXAg
bmFtZT0iTG9nZ2luZ0FuZFJlcG9ydGluZ0F0dHJpYnV0ZXMiPg0KICAgIDx4czphdHRyaWJ1dGUg
bmFtZT0idmVyYm9zZSIgdHlwZT0iQm9vbGVhblRydWVGYWxzZVR5cGVEZXNjcmlwdGlvbiI+DQog
ICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+RW5hYmxlIFZl
cmJvc2UgbG9nZ2luZyAtIHllcyB8IG5vIHwgJHZhcmlhYmxlLW5hbWUkPC94czpkb2N1bWVudGF0
aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgIDwveHM6YXR0cmlidXRlPg0KICAgIDx4
czphdHRyaWJ1dGUgbmFtZT0icmVwb3J0LWVycm9ycyIgdHlwZT0iQm9vbGVhblRydWVGYWxzZVR5
cGVEZXNjcmlwdGlvbiI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3Vt
ZW50YXRpb24+UmVwb3J0IHdoZW4gYW4gZXJyb3Igb2NjdXJzIGR1cmluZyBvcGVyYXRpb24gLSB5
ZXMgfCBubyB8ICR2YXJpYWJsZS1uYW1lJDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6
YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9
IndyaXRlLXN1bW1hcnktcmVwb3J0LXRvIiB0eXBlPSJ4czpzdHJpbmciPg0KICAgICAgPHhzOmFu
bm90YXRpb24+DQogICAgICAgIDx4czpkb2N1bWVudGF0aW9uPlRoZSBwYXRoIG9mIHRoZSBmaWxl
IGluIHdoaWNoIHRoZSBzdW1tYXJ5IHJlcG9ydCB3b3VsZCBiZSB3cml0dGVuPC94czpkb2N1bWVu
dGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgIDwveHM6YXR0cmlidXRlPg0KICA8
L3hzOmF0dHJpYnV0ZUdyb3VwPg0KDQogIDx4czphdHRyaWJ1dGVHcm91cCBuYW1lPSJBc3Nlc3Nt
ZW50UmVwb3J0QXR0cmlidXRlcyI+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJhc3Nlc3NtZW50
LXJlcG9ydC1mb2xkZXIiIHR5cGU9InhzOnN0cmluZyI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4N
CiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+VGhlIHBhdGggb2YgdGhlIGZvbGRlciB3aGVyZSBB
c3Nlc3NtZW50IFJlcG9ydCB3aWxsIGJlIHNhdmVkPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAg
PC94czphbm5vdGF0aW9uPg0KICAgIDwveHM6YXR0cmlidXRlPg0KICAgIDx4czphdHRyaWJ1dGUg
bmFtZT0iYXNzZXNzbWVudC1yZXBvcnQtb3ZlcndyaXRlIiB0eXBlPSJCb29sZWFuVHJ1ZUZhbHNl
VHlwZURlc2NyaXB0aW9uIj4NCiAgICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9j
dW1lbnRhdGlvbj5PdmVyd3JpdGUgZXhpc3RpbmcgQXNzZXNzbWVudCByZXBvcnRzICAtIHRydWUg
fCBmYWxzZSB8ICR2YXJpYWJsZS1uYW1lJDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6
YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgPC94czphdHRyaWJ1dGVHcm91cD4N
Cg0KICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iU2F2ZUFzU2NyaXB0Q29tbWFuZERlc2NyaXB0aW9u
Ij4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPkNvbW1hbmQg
Y29kZSB0byBnZW5lcmF0ZSBhIFNRTCBzY3JpcHQgZm9yIHRoZSBnaXZlbiBtZXRhYmFzZSBub2Rl
KHMpPC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6Y2hv
aWNlPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iU2F2ZUFzU2NyaXB0Q29tbWFuZEdyb3VwRGVzY3Jp
cHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAgICA8L3hzOmNo
b2ljZT4NCiAgICA8eHM6YXR0cmlidXRlR3JvdXAgcmVmPSJTYXZlQXNTY3JpcHRDb21tYW5kQXR0
cmlidXRlcyIvPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KDQogIDx4czpncm91cCBuYW1lPSJTYXZl
QXNTY3JpcHRDb21tYW5kR3JvdXBEZXNjcmlwdGlvbiI+DQogICAgPHhzOmNob2ljZT4NCiAgICAg
IDx4czpncm91cCByZWY9Ik1ldGFiYXNlT2JqZWN0c0Rlc2NyaXB0aW9uIiBtaW5PY2N1cnM9IjAi
IG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJQcm9ncmVzc1Jl
cG9ydGluZ1Byb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iT3V0cHV0V2luZG93UHJv
dmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJMb2dWZXJib3NpdHlQcm92aWRlcnMiLz4N
CiAgICA8L3hzOmNob2ljZT4NCiAgPC94czpncm91cD4NCg0KICA8eHM6YXR0cmlidXRlR3JvdXAg
bmFtZT0iU2F2ZUFzU2NyaXB0Q29tbWFuZEF0dHJpYnV0ZXMiPg0KICAgIDx4czphdHRyaWJ1dGUg
bmFtZT0ib2JqZWN0LW5hbWUiIHR5cGU9InhzOnN0cmluZyI+DQogICAgICA8eHM6YW5ub3RhdGlv
bj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+TmFtZSBvZiB0aGUgTWV0YWJhc2Ugb2JqZWN0
IGZvciB3aGljaCB0aGUgc2NyaXB0IGlzIGdlbmVyYXRlZDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAg
ICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6YXR0cmli
dXRlIG5hbWU9Im9iamVjdC10eXBlIiB0eXBlPSJNZXRhYmFzZU9iamVjdENhdGVnb3JpZXMiLz4N
CiAgICA8eHM6YXR0cmlidXRlIG5hbWU9Im92ZXJ3cml0ZSIgdHlwZT0iQm9vbGVhblRydWVGYWxz
ZVR5cGVEZXNjcmlwdGlvbiIgdXNlPSJvcHRpb25hbCI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4N
CiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+T3ZlcndyaXRlIGlmIHNjcmlwdCBhbHJlYWR5IGV4
aXN0cyAtIHRydWUgfCBmYWxzZSB8ICR2YXJpYWJsZS1uYW1lJDwveHM6ZG9jdW1lbnRhdGlvbj4N
CiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6YXR0
cmlidXRlIG5hbWU9Im1ldGFiYXNlIiB0eXBlPSJNZXRhYmFzZVR5cGVEZXNjcmlwdGlvbiIgdXNl
PSJyZXF1aXJlZCIvPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0iZGVzdGluYXRpb24iIHR5cGU9
InhzOnN0cmluZyIgdXNlPSJyZXF1aXJlZCI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAg
ICAgPHhzOmRvY3VtZW50YXRpb24+VGhlIHBhdGggb2YgdGhlIEZpbGUvRm9sZGVyIHdoZXJlIHNj
cmlwdCB3aWxsIGJlIGdlbmVyYXRlZDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5u
b3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgPC94czphdHRyaWJ1dGVHcm91cD4NCg0K
ICA8eHM6Y29tcGxleFR5cGUgbmFtZT0iU3luY2hyb25pemVUYXJnZXRDb21tYW5kRGVzY3JpcHRp
b24iPg0KICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+Q29tbWFu
ZCBjb2RlIHRvIFN5bmNocm9uaXplIGNoYW5nZXMgaW4gbWV0YWJhc2Ugbm9kZShzKSB3aXRoIHRo
ZSBkYXRhYmFzZTwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQogICAg
PHhzOmNob2ljZT4NCiAgICAgIDx4czpncm91cCByZWY9IlN5bmNocm9uaXplVGFyZ2V0Q29tbWFu
ZEdyb3VwIiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgPC94czpj
aG9pY2U+DQogICAgPHhzOmF0dHJpYnV0ZUdyb3VwIHJlZj0iUmVmcmVzaE9yU3luY2hyb25pemVD
b21tYW5kQXR0cmlidXRlcyIvPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KDQogIDx4czpncm91cCBu
YW1lPSJTeW5jaHJvbml6ZVRhcmdldENvbW1hbmRHcm91cCI+DQogICAgPHhzOmNob2ljZT4NCiAg
ICAgIDx4czpncm91cCByZWY9Ik1ldGFiYXNlT2JqZWN0c0Rlc2NyaXB0aW9uIiBtaW5PY2N1cnM9
IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJTeW5jaHJv
bml6YXRpb25EZWNpc2lvblByb3ZpZGVycyIgbWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9IjEiLz4N
CiAgICAgIDx4czpncm91cCByZWY9Ik91dHB1dFdpbmRvd1Byb3ZpZGVycyIvPg0KICAgICAgPHhz
Omdyb3VwIHJlZj0iUHJvZ3Jlc3NSZXBvcnRpbmdQcm92aWRlcnMiLz4NCiAgICAgIDx4czpncm91
cCByZWY9IkxvZ1ZlcmJvc2l0eVByb3ZpZGVycyIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hz
Omdyb3VwPg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJSZWZyZXNoRnJvbURhdGFiYXNlQ29t
bWFuZERlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVu
dGF0aW9uPkNvbW1hbmQgY29kZSB0byBSZWZyZXNoIGdpdmVuIG1ldGFiYXNlIG5vZGUocyk8L3hz
OmRvY3VtZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0KICAgIDx4czpjaG9pY2U+DQog
ICAgICA8eHM6Z3JvdXAgcmVmPSJSZWZyZXNoRnJvbURhdGFiYXNlQ29tbWFuZEdyb3VwRGVzY3Jp
cHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAgICA8L3hzOmNo
b2ljZT4NCiAgICA8eHM6YXR0cmlidXRlR3JvdXAgcmVmPSJSZWZyZXNoT3JTeW5jaHJvbml6ZUNv
bW1hbmRBdHRyaWJ1dGVzIi8+DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmdyb3VwIG5h
bWU9IlJlZnJlc2hGcm9tRGF0YWJhc2VDb21tYW5kR3JvdXBEZXNjcmlwdGlvbiI+DQogICAgPHhz
OmNob2ljZT4NCiAgICAgIDx4czpncm91cCByZWY9Ik1ldGFiYXNlT2JqZWN0c0Rlc2NyaXB0aW9u
IiBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIi8+DQogICAgICA8eHM6Z3JvdXAg
cmVmPSJQcm9ncmVzc1JlcG9ydGluZ1Byb3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0i
Q29sbGVjdG9yRXJyb3JQcm92aWRlcnMiLz4NCiAgICAgIDx4czpncm91cCByZWY9IlN5bmNocm9u
aXphdGlvbkRlY2lzaW9uUHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJPdXRwdXRX
aW5kb3dQcm92aWRlcnMiLz4NCiAgICAgIDx4czpncm91cCByZWY9IkxvZ1ZlcmJvc2l0eVByb3Zp
ZGVycyIvPg0KICAgIDwveHM6Y2hvaWNlPg0KICA8L3hzOmdyb3VwPg0KICA8eHM6YXR0cmlidXRl
R3JvdXAgbmFtZT0iUmVmcmVzaE9yU3luY2hyb25pemVDb21tYW5kQXR0cmlidXRlcyI+DQogICAg
PHhzOmF0dHJpYnV0ZSBuYW1lPSJvYmplY3QtbmFtZSIgdHlwZT0ieHM6c3RyaW5nIj4NCiAgICAg
IDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5OYW1lIG9mIHRoZSBN
ZXRhYmFzZSBvYmplY3QgdG8gUmVmcmVzaCBvciBTeW5jaHJvbml6ZTwveHM6ZG9jdW1lbnRhdGlv
bj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6
YXR0cmlidXRlIG5hbWU9Im9uLWVycm9yIiB1c2U9Im9wdGlvbmFsIj4NCiAgICAgIDx4czphbm5v
dGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgICAgICBBY3Rpb24gdG8g
YmUgdGFrZW4gd2hlbiBhbiBlcnJvciBvY2N1cnMgZHVyaW5nIFJlZnJlc2ggb3IgU3luY2hyb25p
emUgb3BlcmF0aW9uDQogICAgICAgICAgLSByZXBvcnQtdG90YWwtYXMtd2FybmluZyB8IHJlcG9y
dC1lYWNoLWFzLXdhcm5pbmcgfCBmYWlsLXNjcmlwdCB8ICR2YXJpYWJsZS1uYW1lJA0KICAgICAg
ICA8L3hzOmRvY3VtZW50YXRpb24+DQogICAgICA8L3hzOmFubm90YXRpb24+DQogICAgICA8eHM6
c2ltcGxlVHlwZT4NCiAgICAgICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmluZyI+DQog
ICAgICAgICAgPHhzOnBhdHRlcm4gdmFsdWU9IihcJFthLXpBLVowLTldKChbYS16QS1aMC05K1wt
X1woXClcKiZhbXA7XF5cJSNAIVxzXSkqKVwkKSIvPg0KICAgICAgICAgIDx4czpwYXR0ZXJuIHZh
bHVlPSJyZXBvcnQtdG90YWwtYXMtd2FybmluZ3xyZXBvcnQtZWFjaC1hcy13YXJuaW5nfGZhaWwt
c2NyaXB0Ii8+DQogICAgICAgIDwveHM6cmVzdHJpY3Rpb24+DQogICAgICA8L3hzOnNpbXBsZVR5
cGU+DQogICAgPC94czphdHRyaWJ1dGU+DQogICAgPHhzOmF0dHJpYnV0ZSBuYW1lPSJyZXBvcnQt
ZXJyb3JzLXRvIiB0eXBlPSJ4czpzdHJpbmciIHVzZT0ib3B0aW9uYWwiPg0KICAgICAgPHhzOmFu
bm90YXRpb24+DQogICAgICAgIDx4czpkb2N1bWVudGF0aW9uPlRoZSBwYXRoIG9mIHRoZSBmaWxl
IGludG8gd2hpY2ggUmVmcmVzaCBhbmQgU3luY2hyb25pemUgZXJyb3JzIHNob3VsZCBiZSB3cml0
dGVuPC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgIDwveHM6
YXR0cmlidXRlPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ic2FmZS1tb2RlIiB0eXBlPSJCb29s
ZWFuVHJ1ZUZhbHNlVHlwZURlc2NyaXB0aW9uIiB1c2U9Im9wdGlvbmFsIj4NCiAgICAgIDx4czph
bm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj5SZWZyZXNoIG9yIFN5bmNocm9u
aXplIGluIFNhZmUgbW9kZSAtIHRydWUgfCBmYWxzZSB8ICR2YXJpYWJsZS1uYW1lJDwveHM6ZG9j
dW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4N
CiAgICA8eHM6YXR0cmlidXRlIG5hbWU9Im9iamVjdC10eXBlIiB0eXBlPSJNZXRhYmFzZU9iamVj
dENhdGVnb3JpZXMiLz4NCiAgPC94czphdHRyaWJ1dGVHcm91cD4NCg0KICA8eHM6Y29tcGxleFR5
cGUgbmFtZT0iRm9yY2VMb2FkQ29tbWFuZERlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlv
bj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPkNvbW1hbmQgY29kZSB0byBmb3JjaWJseSBsb2Fk
IHRoZSBtZXRhYmFzZSBjb250ZW50IGZvciB0aGUgc3BlY2lmaWVkIG1ldGFiYXNlIG5vZGUocyk8
L3hzOmRvY3VtZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0KICAgIDx4czpjaG9pY2U+
DQogICAgICA8eHM6Z3JvdXAgcmVmPSJGb3JjZUxvYWRDb21tYW5kR3JvdXBEZXNjcmlwdGlvbiIg
bWluT2NjdXJzPSIwIiBtYXhPY2N1cnM9InVuYm91bmRlZCIvPg0KICAgIDwveHM6Y2hvaWNlPg0K
ICAgIDx4czphdHRyaWJ1dGVHcm91cCByZWY9IkZvcmNlTG9hZENvbW1hbmRBdHRyaWJ1dGVzIi8+
DQogIDwveHM6Y29tcGxleFR5cGU+DQoNCiAgPHhzOmF0dHJpYnV0ZUdyb3VwIG5hbWU9IkZvcmNl
TG9hZENvbW1hbmRBdHRyaWJ1dGVzIj4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9Im9iamVjdC1u
YW1lIiB0eXBlPSJ4czpzdHJpbmciPg0KICAgICAgPHhzOmFubm90YXRpb24+DQogICAgICAgIDx4
czpkb2N1bWVudGF0aW9uPk5hbWUgb2YgdGhlIE1ldGFiYXNlIG9iamVjdCB0byBmb3JjZSBsb2Fk
PC94czpkb2N1bWVudGF0aW9uPg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgIDwveHM6YXR0
cmlidXRlPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ib2JqZWN0LXR5cGUiIHR5cGU9Ik1ldGFi
YXNlT2JqZWN0Q2F0ZWdvcmllcyIvPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ibWV0YWJhc2Ui
IHR5cGU9Ik1ldGFiYXNlVHlwZURlc2NyaXB0aW9uIiB1c2U9InJlcXVpcmVkIi8+DQogIDwveHM6
YXR0cmlidXRlR3JvdXA+DQoNCiAgPHhzOmdyb3VwIG5hbWU9IkZvcmNlTG9hZENvbW1hbmRHcm91
cERlc2NyaXB0aW9uIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iTWV0
YWJhc2VPYmplY3RzRGVzY3JpcHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5k
ZWQiLz4NCiAgICAgIDx4czpncm91cCByZWY9IkNvbGxlY3RvckVycm9yUHJvdmlkZXJzIi8+DQog
ICAgICA8eHM6Z3JvdXAgcmVmPSJQcm9ncmVzc1JlcG9ydGluZ1Byb3ZpZGVycyIvPg0KICAgICAg
PHhzOmdyb3VwIHJlZj0iTG9nVmVyYm9zaXR5UHJvdmlkZXJzIi8+DQogICAgPC94czpjaG9pY2U+
DQogIDwveHM6Z3JvdXA+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IkNsb3NlUHJvamVjdENv
bW1hbmREZXNjcmlwdGlvbiI+DQogICAgPHhzOmFubm90YXRpb24+DQogICAgICA8eHM6ZG9jdW1l
bnRhdGlvbj5Db21tYW5kIGNvZGUgdG8gY2xvc2UgdGhlIGN1cnJlbnQgU1NNQSBwcm9qZWN0PC94
czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6YXR0cmlidXRl
IG5hbWU9ImlmLW1vZGlmaWVkIiB1c2U9Im9wdGlvbmFsIj4NCiAgICAgIDx4czphbm5vdGF0aW9u
Pg0KICAgICAgICA8eHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgICAgICBTcGVjaWZ5IHRoZSBhY3Rp
b24gdG8gYmUgdGFrZW4gYmVmb3JlIGNsb3NpbmcgaWYgU1NNQSBwcm9qZWN0IHdhcyBtb2RpZmll
ZA0KICAgICAgICAgIC0gc2F2ZSB8IGVycm9yIHwgaWdub3JlIHwgJHZhcmlhYmxlLW5hbWUkDQog
ICAgICAgIDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICAg
IDx4czpzaW1wbGVUeXBlPg0KICAgICAgICA8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5n
Ij4NCiAgICAgICAgICA8eHM6cGF0dGVybiB2YWx1ZT0iKFwkW2EtekEtWjAtOV0oKFthLXpBLVow
LTkrXC1fXChcKVwqJmFtcDtcXlwlI0AhXHNdKSopXCQpIi8+DQogICAgICAgICAgPHhzOnBhdHRl
cm4gdmFsdWU9InNhdmV8ZXJyb3J8aWdub3JlIi8+DQogICAgICAgIDwveHM6cmVzdHJpY3Rpb24+
DQogICAgICA8L3hzOnNpbXBsZVR5cGU+DQogICAgPC94czphdHRyaWJ1dGU+DQogIDwveHM6Y29t
cGxleFR5cGU+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9IlNhdmVQcm9qZWN0Q29tbWFuZERl
c2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9u
PkNvbW1hbmQgY29kZSB0byBzYXZlIHRoZSBjdXJyZW50IFNTTUEgcHJvamVjdDwveHM6ZG9jdW1l
bnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRpb24+DQogICAgPCEtLSBzYXZlLXByb2plY3QgY29t
bWFuZCBoYXMgbm8gY29udGVudCAtLT4NCiAgPC94czpjb21wbGV4VHlwZT4NCg0KICA8eHM6Y29t
cGxleFR5cGUgbmFtZT0iT3BlblByb2plY3RDb21tYW5kRGVzY3JpcHRpb24iPg0KICAgIDx4czph
bm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+Q29tbWFuZCBjb2RlIHRvIE9wZW4g
YW4gZXhpc3RpbmcgU1NNQSBwcm9qZWN0PC94czpkb2N1bWVudGF0aW9uPg0KICAgIDwveHM6YW5u
b3RhdGlvbj4NCiAgICA8eHM6Y29tcGxleENvbnRlbnQ+DQogICAgICA8eHM6ZXh0ZW5zaW9uIGJh
c2U9IlNTTUFQcm9qZWN0RGVzY3JpcHRpb24iPg0KICAgICAgICA8eHM6Y2hvaWNlPg0KICAgICAg
ICAgIDx4czpncm91cCByZWY9Ik9wZW5Qcm9qZWN0Q29tbWFuZEdyb3VwRGVzY3JpcHRpb24iIG1p
bk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAgICAgICAgPC94czpjaG9pY2U+
DQogICAgICA8L3hzOmV4dGVuc2lvbj4NCiAgICA8L3hzOmNvbXBsZXhDb250ZW50Pg0KICA8L3hz
OmNvbXBsZXhUeXBlPg0KDQogIDx4czpncm91cCBuYW1lPSJPcGVuUHJvamVjdENvbW1hbmRHcm91
cERlc2NyaXB0aW9uIj4NCiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iT3V0
cHV0V2luZG93UHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJDb252ZXJ0V29ya3Nw
YWNlUHJvdmlkZXJzIi8+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJQcm9ncmVzc1JlcG9ydGluZ1By
b3ZpZGVycyIvPg0KICAgICAgPHhzOmdyb3VwIHJlZj0iTG9nVmVyYm9zaXR5UHJvdmlkZXJzIi8+
DQogICAgPC94czpjaG9pY2U+DQogIDwveHM6Z3JvdXA+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5h
bWU9IlNTTUFQcm9qZWN0RGVzY3JpcHRpb24iPg0KICAgIDx4czphdHRyaWJ1dGVHcm91cCByZWYg
PSJTU01BUHJvamVjdERlc2NyaXB0aW9uQXR0cmlidXRlcyIvPg0KICA8L3hzOmNvbXBsZXhUeXBl
Pg0KDQogIDx4czpjb21wbGV4VHlwZSBuYW1lPSJDcmVhdGVOZXdQcm9qZWN0Q29tbWFuZERlc2Ny
aXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVudGF0aW9uPkNv
bW1hbmQgY29kZSB0byBDcmVhdGUgbmV3IFNTTUEgcHJvamVjdDwveHM6ZG9jdW1lbnRhdGlvbj4N
CiAgICA8L3hzOmFubm90YXRpb24+DQogICAgPHhzOmNvbXBsZXhDb250ZW50Pg0KICAgICAgPHhz
OmV4dGVuc2lvbiBiYXNlPSJTU01BUHJvamVjdERlc2NyaXB0aW9uIj4NCiAgICAgICAgPHhzOmNo
b2ljZT4NCiAgICAgICAgICA8eHM6Z3JvdXAgcmVmPSJDcmVhdGVOZXdQcm9qZWN0Q29tbWFuZEdy
b3VwRGVzY3JpcHRpb24iIG1pbk9jY3Vycz0iMCIgbWF4T2NjdXJzPSJ1bmJvdW5kZWQiLz4NCiAg
ICAgICAgPC94czpjaG9pY2U+DQogICAgICAgIDx4czphdHRyaWJ1dGVHcm91cCByZWY9IkNyZWF0
ZU5ld1Byb2plY3RBdHRyaWJ1dGVzIi8+DQogICAgICA8L3hzOmV4dGVuc2lvbj4NCiAgICA8L3hz
OmNvbXBsZXhDb250ZW50Pg0KICA8L3hzOmNvbXBsZXhUeXBlPg0KDQogIDx4czpncm91cCBuYW1l
PSJDcmVhdGVOZXdQcm9qZWN0Q29tbWFuZEdyb3VwRGVzY3JpcHRpb24iPg0KICAgIDx4czpjaG9p
Y2U+DQogICAgICA8eHM6Z3JvdXAgcmVmPSJPdXRwdXRXaW5kb3dQcm92aWRlcnMiLz4NCiAgICAg
IDx4czpncm91cCByZWY9IlByb2dyZXNzUmVwb3J0aW5nUHJvdmlkZXJzIi8+DQogICAgICA8eHM6
Z3JvdXAgcmVmPSJMb2dWZXJib3NpdHlQcm92aWRlcnMiLz4NCiAgICA8L3hzOmNob2ljZT4NCiAg
PC94czpncm91cD4NCg0KICA8eHM6YXR0cmlidXRlR3JvdXAgbmFtZT0iQ3JlYXRlTmV3UHJvamVj
dEF0dHJpYnV0ZXMiPg0KICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ib3ZlcndyaXRlLWlmLWV4aXN0
cyIgdHlwZT0iQm9vbGVhblRydWVGYWxzZVR5cGVEZXNjcmlwdGlvbiIgdXNlPSJvcHRpb25hbCI+
DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50YXRpb24+T3Zlcndy
aXRlIGlmIFNTTUEgcHJvamVjdCBhbHJlYWR5IGV4aXN0cyAtIHRydWUgfCBmYWxzZSB8ICR2YXJp
YWJsZS1uYW1lJDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAg
ICA8L3hzOmF0dHJpYnV0ZT4NCiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InByb2plY3QtdHlwZSIg
dXNlPSJvcHRpb25hbCI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3Vt
ZW50YXRpb24+U3BlY2lmeSB0aGUgdHlwZSBvZiBTU01BIHByb2plY3QgdG8gY3JlYXRlIC0gc3Fs
LXNlcnZlci0yMDA1IHwgc3FsLXNlcnZlci0yMDA4IHwgc3FsLXNlcnZlci0yMDEyIHwgc3FsLXNl
cnZlci0yMDE0IHwgc3FsLWF6dXJlIHwgJHZhcmlhYmxlLW5hbWUkPC94czpkb2N1bWVudGF0aW9u
Pg0KICAgICAgPC94czphbm5vdGF0aW9uPg0KICAgICAgPHhzOnNpbXBsZVR5cGU+DQogICAgICAg
IDx4czpyZXN0cmljdGlvbiBiYXNlPSJ4czpzdHJpbmciPg0KICAgICAgICAgIDx4czpwYXR0ZXJu
IHZhbHVlPSIoXCRbYS16QS1aMC05XSgoW2EtekEtWjAtOStcLV9cKFwpXComYW1wO1xeXCUjQCFc
c10pKilcJCkiLz4NCiAgICAgICAgICA8eHM6cGF0dGVybiB2YWx1ZT0ic3FsLXNlcnZlci0yMDA1
fHNxbC1zZXJ2ZXItMjAwOHxzcWwtc2VydmVyLTIwMTJ8c3FsLXNlcnZlci0yMDE0fHNxbC1henVy
ZSIvPg0KICAgICAgICA8L3hzOnJlc3RyaWN0aW9uPg0KICAgICAgPC94czpzaW1wbGVUeXBlPg0K
ICAgIDwveHM6YXR0cmlidXRlPg0KICA8L3hzOmF0dHJpYnV0ZUdyb3VwPg0KDQogIDx4czphdHRy
aWJ1dGVHcm91cCBuYW1lPSJTU01BUHJvamVjdERlc2NyaXB0aW9uQXR0cmlidXRlcyI+DQogICAg
PHhzOmF0dHJpYnV0ZSBuYW1lPSJwcm9qZWN0LWZvbGRlciIgdHlwZT0ieHM6c3RyaW5nIiB1c2U9
InJlcXVpcmVkIj4NCiAgICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1lbnRh
dGlvbj5Gb2xkZXIgcGF0aCB3aGVyZSBTU01BIHByb2plY3Qgd2lsbCBiZSBzYXZlZDwveHM6ZG9j
dW1lbnRhdGlvbj4NCiAgICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8L3hzOmF0dHJpYnV0ZT4N
CiAgICA8eHM6YXR0cmlidXRlIG5hbWU9InByb2plY3QtbmFtZSIgdHlwZT0ieHM6c3RyaW5nIiB1
c2U9InJlcXVpcmVkIj4NCiAgICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgICA8eHM6ZG9jdW1l
bnRhdGlvbj5OYW1lIG9mIHRoZSBTU01BIHByb2plY3Q8L3hzOmRvY3VtZW50YXRpb24+DQogICAg
ICA8L3hzOmFubm90YXRpb24+DQogICAgPC94czphdHRyaWJ1dGU+DQogIDwveHM6YXR0cmlidXRl
R3JvdXA+DQoNCiAgPHhzOmdyb3VwIG5hbWU9Ik1ldGFiYXNlT2JqZWN0c0Rlc2NyaXB0aW9uIj4N
CiAgICA8eHM6Y2hvaWNlPg0KICAgICAgPHhzOmVsZW1lbnQgbmFtZT0ibWV0YWJhc2Utb2JqZWN0
IiB0eXBlPSJNZXRhYmFzZU9iamVjdERlc2NyaXB0aW9uIi8+DQogICAgPC94czpjaG9pY2U+DQog
IDwveHM6Z3JvdXA+DQoNCiAgPHhzOmNvbXBsZXhUeXBlIG5hbWU9Ik1ldGFiYXNlT2JqZWN0RGVz
Y3JpcHRpb24iPg0KICAgIDx4czphbm5vdGF0aW9uPg0KICAgICAgPHhzOmRvY3VtZW50YXRpb24+
Q29tbWFuZCBjb2RlIHRvIHNwZWNpZnkgaW5kaXZpZHVhbCBtZXRhYmFzZSBvYmplY3Q8L3hzOmRv
Y3VtZW50YXRpb24+DQogICAgPC94czphbm5vdGF0aW9uPg0KICAgIDx4czphdHRyaWJ1dGVHcm91
cCByZWY9Ik1ldGFiYXNlT2JqZWN0QXR0cmlidXRlcyIvPg0KICA8L3hzOmNvbXBsZXhUeXBlPg0K
DQogIDx4czphdHRyaWJ1dGVHcm91cCBuYW1lPSJNZXRhYmFzZU9iamVjdEF0dHJpYnV0ZXMiPg0K
ICAgIDx4czphdHRyaWJ1dGUgbmFtZT0ib2JqZWN0LW5hbWUiIHR5cGU9InhzOnN0cmluZyIgdXNl
PSJyZXF1aXJlZCI+DQogICAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgICAgPHhzOmRvY3VtZW50
YXRpb24+TmFtZSBvZiB0aGUgTWV0YWJhc2Ugb2JqZWN0PC94czpkb2N1bWVudGF0aW9uPg0KICAg
ICAgPC94czphbm5vdGF0aW9uPg0KICAgIDwveHM6YXR0cmlidXRlPg0KICAgIDx4czphdHRyaWJ1
dGUgbmFtZT0ib2JqZWN0LXR5cGUiIHR5cGU9Ik1ldGFiYXNlT2JqZWN0Q2F0ZWdvcmllcyIvPg0K
ICA8L3hzOmF0dHJpYnV0ZUdyb3VwPg0KDQogIDx4czpzaW1wbGVUeXBlIG5hbWU9Ik1ldGFiYXNl
VHlwZURlc2NyaXB0aW9uIj4NCiAgICA8eHM6YW5ub3RhdGlvbj4NCiAgICAgIDx4czpkb2N1bWVu
dGF0aW9uPlNwZWNpZnkgdGhlIE1ldGFiYXNlIHR5cGUgb2YgU1NNQSAtIHNvdXJjZSB8IHRhcmdl
dCB8ICR2YXJpYWJsZS1uYW1lJDwveHM6ZG9jdW1lbnRhdGlvbj4NCiAgICA8L3hzOmFubm90YXRp
b24+DQogICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9InhzOnN0cmluZyI+DQogICAgICA8eHM6cGF0
dGVybiB2YWx1ZT0iKFwkW2EtekEtWjAtOV0oKFthLXpBLVowLTkrXC1fXChcKVwqJmFtcDtcXlwl
I0AhXHNdKSopXCQpIi8+DQogICAgICA8eHM6cGF0dGVybiB2YWx1ZT0ic291cmNlfHRhcmdldCIv
Pg0KICAgIDwveHM6cmVzdHJpY3Rpb24+DQogIDwveHM6c2ltcGxlVHlwZT4NCg0KICA8eHM6c2lt
cGxlVHlwZSBuYW1lPSJCb29sZWFuVHJ1ZUZhbHNlVHlwZURlc2NyaXB0aW9uIj4NCiAgICA8eHM6
cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3RyaW5nIj4NCiAgICAgIDx4czpwYXR0ZXJuIHZhbHVlPSIo
XCRbYS16QS1aMC05XSgoW2EtekEtWjAtOStcLV9cKFwpXComYW1wO1xeXCUjQCFcc10pKilcJCki
Lz4NCiAgICAgIDx4czpwYXR0ZXJuIHZhbHVlPSJ0cnVlfGZhbHNlIi8+DQogICAgPC94czpyZXN0
cmljdGlvbj4NCiAgPC94czpzaW1wbGVUeXBlPg0KDQogIDx4czpzaW1wbGVUeXBlIG5hbWU9IkJv
b2xlYW5ZZXNOb1R5cGVEZXNjcmlwdGlvbiI+DQogICAgPHhzOnJlc3RyaWN0aW9uIGJhc2U9Inhz
OnN0cmluZyI+DQogICAgICA8eHM6cGF0dGVybiB2YWx1ZT0iKFwkW2EtekEtWjAtOV0oKFthLXpB
LVowLTkrXC1fXChcKVwqJmFtcDtcXlwlI0AhXHNdKSopXCQpIi8+DQogICAgICA8eHM6cGF0dGVy
biB2YWx1ZT0ieWVzfG5vIi8+DQogICAgPC94czpyZXN0cmljdGlvbj4NCiAgPC94czpzaW1wbGVU
eXBlPg0KDQogIDx4czpzaW1wbGVUeXBlIG5hbWU9Ik1ldGFiYXNlT2JqZWN0Q2F0ZWdvcmllcyI+
DQogICAgPHhzOmFubm90YXRpb24+DQogICAgICA8eHM6ZG9jdW1lbnRhdGlvbj4NCiAgICAgICAg
VGhlIHR5cGUgb2YgdGhlIE1ldGFiYXNlIG9iamVjdCAtIHJvb3QgfCBjYXRlZ29yeSB8IERhdGFi
YXNlcyB8IFNjaGVtYXMgfCBUYWJsZXMgfCBWaWV3cyB8IFByb2NlZHVyZXMgfA0KICAgICAgICBG
dW5jdGlvbnMgfCBUcmlnZ2VycyB8IERlZmF1bHRzIHwgUnVsZXMgfCBEYXRhdHlwZXMgfCBQYXJh
bWV0ZXJzIHwgQ29sdW1ucyB8IEluZGV4ZXMgfCBDb25zdHJhaW50cyB8DQogICAgICAgIFN5bm9u
eW1zIHwgRXZlbnRzIHwgJHZhcmlhYmxlLXZhbHVlJA0KICAgICAgPC94czpkb2N1bWVudGF0aW9u
Pg0KICAgIDwveHM6YW5ub3RhdGlvbj4NCiAgICA8eHM6cmVzdHJpY3Rpb24gYmFzZT0ieHM6c3Ry
aW5nIj4NCiAgICAgIDx4czpwYXR0ZXJuIHZhbHVlPSIoXCRbYS16QS1aMC05XSgoW2EtekEtWjAt
OStcLV9cKFwpXComYW1wO1xeXCUjQCFcc10pKilcJCkiLz4NCiAgICAgIDx4czpwYXR0ZXJuIHZh
bHVlPSJyb290fGNhdGVnb3J5fERhdGFiYXNlc3xTY2hlbWFzfFRhYmxlc3xWaWV3c3xQcm9jZWR1
cmVzfEZ1bmN0aW9uc3xUcmlnZ2Vyc3xEZWZhdWx0c3wNCiAgICAgICAgICAgICAgICAgIFJ1bGVz
fERhdGF0eXBlc3xQYXJhbWV0ZXJzfENvbHVtbnN8SW5kZXhlc3xDb25zdHJhaW50c3xTeW5vbnlt
c3xFdmVudHMiLz4NCiAgICA8L3hzOnJlc3RyaWN0aW9uPg0KICA8L3hzOnNpbXBsZVR5cGU+DQoN
CiAgPCEtLSBTQ1JJUFQgQ09NTUFORFMgZGVmaW5pdGlvbiAtLT4NCg0KPC94czpzY2hlbWE+AABQ
FwAA77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjxzc21hLXNjcmlw
dC1maWxlDQoJeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0
YW5jZSINCgl4c2k6bm9OYW1lc3BhY2VTY2hlbWFMb2NhdGlvbj0iQzpcTWljcm9zb2Z0IFNRTCBT
ZXJ2ZXIgTWlncmF0aW9uIEFzc2lzdGFudCBmb3IgTXlTUUxcU2NoZW1hc1xNMlNTQ29uc29sZVNj
cmlwdFNjaGVtYS54c2QiPg0KDQogIDxzZXJ2ZXJzPg0KICAgIDxteXNxbCBuYW1lPSJtdXNlX3Nv
dXJjZSI+DQogICAgICA8c3RhbmRhcmQtbW9kZT4NCiAgICAgICAgPHNlcnZlciB2YWx1ZSA9IiRT
b3VyY2VTZXJ2ZXIkIi8+DQogICAgICAgIDxwb3J0IHZhbHVlID0iJFNvdXJjZVBvcnQkIi8+DQog
ICAgICAgIDx1c2VyLWlkIHZhbHVlID0iJFNvdXJjZVVzZXJOYW1lJCIvPg0KICAgICAgICA8cGFz
c3dvcmQgdmFsdWU9IiRTb3VyY2VQYXNzd29yZCQiLz4NCiAgICAgICAgPHNzbC12ZXJpZnkgdmFs
dWUgPSJmYWxzZSIvPg0KICAgICAgPC9zdGFuZGFyZC1tb2RlPg0KICAgIDwvbXlzcWw+DQoNCiAg
ICA8c3FsLXNlcnZlciBuYW1lID0ibXVzZV90YXJnZXQiPg0KICAgICAgPHdpbmRvd3MtYXV0aGVu
dGljYXRpb24+DQogICAgICAgIDxkYXRhYmFzZSB2YWx1ZSA9IiRUYXJnZXREQiQiLz4NCiAgICAg
ICAgPHNlcnZlciB2YWx1ZSA9IiRUYXJnZXRTZXJ2ZXJOYW1lJCIvPg0KICAgICAgPC93aW5kb3dz
LWF1dGhlbnRpY2F0aW9uPg0KICAgIDwvc3FsLXNlcnZlcj4NCiAgPC9zZXJ2ZXJzPg0KDQogIDxz
Y3JpcHQtY29tbWFuZHM+DQogICAgPGNyZWF0ZS1uZXctcHJvamVjdA0KCQkJcHJvamVjdC1mb2xk
ZXI9IiRwcm9qZWN0X2ZvbGRlciQiDQoJCQlwcm9qZWN0LW5hbWU9IiRwcm9qZWN0X25hbWUkIg0K
CQkJb3ZlcndyaXRlLWlmLWV4aXN0cz0iJHByb2plY3Rfb3ZlcndyaXRlJCIgLz4NCiAgICA8Y29u
bmVjdC1zb3VyY2UtZGF0YWJhc2Ugc2VydmVyPSJtdXNlX3NvdXJjZSIgLz4NCiAgICA8Y29ubmVj
dC10YXJnZXQtZGF0YWJhc2Ugc2VydmVyPSJtdXNlX3RhcmdldCIgLz4NCiAgICA8bWFwLXNjaGVt
YQ0KCQkJc291cmNlLXNjaGVtYT0iJFNvdXJjZURhdGFiYXNlJCINCiAgICAgICAgICAgIHNxbC1z
ZXJ2ZXItc2NoZW1hPSIkVGFyZ2V0REIkLmRibyIgLz4NCiAgICA8Y29udmVydC1zY2hlbWENCgkJ
CW9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkIg0KICAgICAgICAgICAgb2JqZWN0LXR5cGU9
IkRhdGFiYXNlcyIgLz4NCiAgICA8c3luY2hyb25pemUtdGFyZ2V0DQoJCQlvYmplY3QtbmFtZT0i
JFRhcmdldERCJC5kYm8iDQogICAgICAgICAgICBvYmplY3QtdHlwZT0iU2NoZW1hcyIgLz4NCiAg
ICA8bWlncmF0ZS1kYXRhDQoJCQl3cml0ZS1zdW1tYXJ5LXJlcG9ydC10bz0iJFN1bW1hcnlSZXBv
cnRzRm9sZGVyJCINCgkJCXJlcG9ydC1lcnJvcnM9InRydWUiDQoJCQl2ZXJib3NlPSJ0cnVlIj4N
CiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQuYWx0
ZXJzZWluZHJ1Y2tkb21hZW5lIi8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1l
PSIkU291cmNlRGF0YWJhc2UkLmJhc2lzZWxlbWVudCIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVj
dCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5iYXNpc2VsZW1lbnRkZXNpZ24iLz4NCiAg
ICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQuYmFzaXNl
bGVtZW50ZG9tYWVuZSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNv
dXJjZURhdGFiYXNlJC5iYXNpc2VsZW1lbnRmYXJiZSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVj
dCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5iYXNpc2VsZW1lbnRmb3JtIi8+DQogICAg
ICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmJhc2lzZWxl
bWVudGZ1bmt0aW9uIi8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291
cmNlRGF0YWJhc2UkLmJhc2lzZWxlbWVudG1hdGVyaWFsIi8+DQogICAgICA8bWV0YWJhc2Utb2Jq
ZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmJhc2lzZWxlbWVudHJlbGF0aW9uIi8+
DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmJh
c2lzZWxlbWVudHRlaWxlbGVtZW50Ii8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1u
YW1lPSIkU291cmNlRGF0YWJhc2UkLmJhc2lzZWxlbWVudHRyYWdld2Vpc2UiLz4NCiAgICAgIDxt
ZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQuYmFzaXNlbGVtZW50
enVzdGFuZCIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURh
dGFiYXNlJC5jaGFyYWt0ZXJlaWdlbnNjaGFmdHNkb21hZW5lIi8+DQogICAgICA8bWV0YWJhc2Ut
b2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmRlc2lnbmRvbWFlbmUiLz4NCiAg
ICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQuZmFyYmVp
bmRydWNrZG9tYWVuZSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNv
dXJjZURhdGFiYXNlJC5mYXJiZW5kb21hZW5lIi8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9i
amVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmZhcmJrb256ZXB0ZG9tYWVuZSIvPg0KICAgICAg
PG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5maWxtIi8+DQog
ICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmZpbG1m
YXJia29uemVwdCIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJj
ZURhdGFiYXNlJC5maWxtZ2VucmUiLz4NCiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5h
bWU9IiRTb3VyY2VEYXRhYmFzZSQuZmlsbXByb2R1a3Rpb25zb3J0Ii8+DQogICAgICA8bWV0YWJh
c2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmZvcm1lbmRvbWFlbmUiLz4N
CiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQuZnVu
a3Rpb25zZG9tYWVuZSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNv
dXJjZURhdGFiYXNlJC5nZW5yZWRvbWFlbmUiLz4NCiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2Jq
ZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQua29lcnBlcm1vZGlmaWthdGlvbnNkb21hZW5lIi8+
DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmtv
ZXJwZXJ0ZWlsZG9tYWVuZSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0i
JFNvdXJjZURhdGFiYXNlJC5rb3N0dWVtIi8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVj
dC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLmtvc3R1ZW1hbHRlcnNlaW5kcnVjayIvPg0KICAgICAg
PG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5rb3N0dWVtYmFz
aXNlbGVtZW50Ii8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNl
RGF0YWJhc2UkLmtvc3R1ZW1jaGFyYWt0ZXJlaWdlbnNjaGFmdCIvPg0KICAgICAgPG1ldGFiYXNl
LW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5rb3N0dWVta29lcnBlcm1vZGlm
aWthdGlvbiIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURh
dGFiYXNlJC5rb3N0dWVtc3BpZWxvcnQiLz4NCiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0
LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQua29zdHVlbXNwaWVsemVpdCIvPg0KICAgICAgPG1ldGFi
YXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5rb3N0dWVtdGFnZXN6ZWl0
Ii8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2Uk
Lmtvc3R1ZW10aW1lY29kZSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0i
JFNvdXJjZURhdGFiYXNlJC5tYXRlcmlhbGRvbWFlbmUiLz4NCiAgICAgIDxtZXRhYmFzZS1vYmpl
Y3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQubWF0ZXJpYWxlaW5kcnVja2RvbWFlbmUi
Lz4NCiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQu
b3BlcmF0b3Jkb21hZW5lIi8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIk
U291cmNlRGF0YWJhc2UkLnByb2R1a3Rpb25zb3J0ZG9tYWVuZSIvPg0KICAgICAgPG1ldGFiYXNl
LW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5yb2xsZSIvPg0KICAgICAgPG1l
dGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5yb2xsZWRvbWluYW50
ZWNoYXJha3RlcmVpZ2Vuc2NoYWZ0Ii8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1u
YW1lPSIkU291cmNlRGF0YWJhc2UkLnJvbGxlZmFtaWxpZW5zdGFuZCIvPg0KICAgICAgPG1ldGFi
YXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC5zcGllbG9ydGRvbWFlbmUi
Lz4NCiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQu
c3BpZWx6ZWl0ZG9tYWVuZSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0i
JFNvdXJjZURhdGFiYXNlJC50YWdlc3plaXRkb21hZW5lIi8+DQogICAgICA8bWV0YWJhc2Utb2Jq
ZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLnRlaWxlbGVtZW50Ii8+DQogICAgICA8
bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLnRlaWxlbGVtZW50
ZGVzaWduIi8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0
YWJhc2UkLnRlaWxlbGVtZW50ZG9tYWVuZSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmpl
Y3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC50ZWlsZWxlbWVudGZhcmJlIi8+DQogICAgICA8bWV0
YWJhc2Utb2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLnRlaWxlbGVtZW50Zm9y
bSIvPg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNl
JC50ZWlsZWxlbWVudG1hdGVyaWFsIi8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0IG9iamVjdC1u
YW1lPSIkU291cmNlRGF0YWJhc2UkLnRlaWxlbGVtZW50bWF0ZXJpYWxidWciLz4NCiAgICAgIDxt
ZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRTb3VyY2VEYXRhYmFzZSQudGVpbGVsZW1lbnRt
YXRlcmlhbGJ1Z19hbHQiLz4NCiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9IiRT
b3VyY2VEYXRhYmFzZSQudGVpbGVsZW1lbnR0cmFnZXdlaXNlIi8+DQogICAgICA8bWV0YWJhc2Ut
b2JqZWN0IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLnRlaWxlbGVtZW50enVzdGFuZCIv
Pg0KICAgICAgPG1ldGFiYXNlLW9iamVjdCBvYmplY3QtbmFtZT0iJFNvdXJjZURhdGFiYXNlJC50
cmFnZXdlaXNlbmRvbWFlbmUiLz4NCiAgICAgIDxtZXRhYmFzZS1vYmplY3Qgb2JqZWN0LW5hbWU9
IiRTb3VyY2VEYXRhYmFzZSQudHlwdXNkb21hZW5lIi8+DQogICAgICA8bWV0YWJhc2Utb2JqZWN0
IG9iamVjdC1uYW1lPSIkU291cmNlRGF0YWJhc2UkLnp1c3RhbmRzZG9tYWVuZSIvPg0KICAgIDwv
bWlncmF0ZS1kYXRhPg0KICAgIDxjbG9zZS1wcm9qZWN0IGlmLW1vZGlmaWVkPSJzYXZlIiAvPg0K
ICA8L3NjcmlwdC1jb21tYW5kcz4NCg0KPC9zc21hLXNjcmlwdC1maWxlPkJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAADAEAAAjfgAAnAQAAMwGAAAjU3RyaW5ncwAAAABoCwAAGAEA
ACNVUwCADAAAEAAAACNHVUlEAAAAkAwAAJgBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+iUz
ABYAAAEAAAAjAAAABQAAAAYAAAAJAAAAAQAAACUAAAACAAAADwAAAAIAAAACAAAAAwAAAAQAAAAB
AAAABAAAAAMAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYA
oAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNw
AgYAVgNwAgYAjwNvAwYArwNvAwYA4APNAwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYA
gARvAw4AogQUAQ4AxAQUARIAHQX9BBIANQX9BAYAbwW6AAYAnQWTBQYAvgWTBQYAywWTBQYA2AWT
BQYA7QWTBQAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8A
DQAEAAgAAwEAAKMAAAARAAQACgARAH8BEwARAKwBFwARAPYBOQAGBh8CRwBWgCcCSgBWgC8CSgBQ
IAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAg
AAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGJsEiQACALwgAAAAAIYAGgIbAAIAbiEA
AAAAhhi8ARsAAgAAAAEANwI5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwB
WABxALwBWAB5ALwBWACBALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChABQEYgChAC8EaQAp
ALwBbgC5ALwBegDJALwBGwARALwBGwDRALwBGwAZANYEjQDZACcFkgDhAD4FlwDpAEcFnQAJAFEF
oQCxAFoFpQAJAHYFqgChAH4FoQDxAIwFrwCxAKQFtgABAbwBvAAJAdAFwgARAeMFoQAZAfIFyADZ
AP8FXQAZALwBGwAIABQATgAIABgAUwApAJMAgAAuABsAUQEuACMAUQEuAGMAdwEuAAsA4AAuABMA
KAEuADMAKAEuACsAUQEuADsAVwEuAEMAUQEuAFsAbgFDAGsAUwBJAJMAgABhAJsAUwCDAKsAUwB1
AM4AAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIAAwACAAMABQABAAQABQACAAUABwAEgAAA
AQAAAGsWZGkAAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoAAAAA
AAwAAAAAAAAAAAAAAAoA9QAAAAAADAAAAAAAAAAAAAAACgDeBAAAAAAAAAAAAQAAAA4GAAC4AAAA
AQAAAFEGAAAIxgAAAQAAAJEGAAAFAAQAAAAAPE1vZHVsZT4AU1RfZWQwYzk2NzczYmM2NGY3OTk4
MjllYTA3NTc1ZDUwNjIuZGxsAFJlc291cmNlcwBTVF9lZDBjOTY3NzNiYzY0Zjc5OTgyOWVhMDc1
NzVkNTA2Mi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfZWQwYzk2NzczYmM2NGY3
OTk4MjllYTA3NTc1ZDUwNjIAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5
c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNr
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3Vy
Y2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJl
c291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgB2
YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0
dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAFNjcmlwdE9i
amVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJsZXMAVmFyaWFibGUA
Z2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAEdldEV4ZWN1dGluZ0Fzc2VtYmx5AFN0cmluZwBH
ZXRUeXBlAGdldF9OYW1lc3BhY2UARm9ybWF0AFN5c3RlbS5JTwBTdHJlYW0AR2V0TWFuaWZlc3RS
ZXNvdXJjZVN0cmVhbQBTdHJlYW1SZWFkZXIAUGF0aABDb21iaW5lAFRleHRSZWFkZXIAUmVhZFRv
RW5kAEZpbGUAV3JpdGVBbGxUZXh0AHNldF9UYXNrUmVzdWx0AFNUX2VkMGM5Njc3M2JjNjRmNzk5
ODI5ZWEwNzU3NWQ1MDYyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBTVF9lZDBjOTY3
NzNiYzY0Zjc5OTgyOWVhMDc1NzVkNTA2Mi5NMlNTQ29uc29sZVNjcmlwdFNjaGVtYS54c2QAU1Rf
ZWQwYzk2NzczYmM2NGY3OTk4MjllYTA3NTc1ZDUwNjIubXVzZV9teXNxbF9zc21hLnhtbAAAAAAA
cVMAVABfAGUAZAAwAGMAOQA2ADcANwAzAGIAYwA2ADQAZgA3ADkAOQA4ADIAOQBlAGEAMAA3ADUA
NwA1AGQANQAwADYAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA
M00AaQBnAHIAYQB0AGkAbwBuAFcAbwByAGsAaQBuAGcARABpAHIAZQBjAHQAbwByAHkAACdtAHUA
cwBlAF8AbQB5AHMAcQBsAF8AcwBzAG0AYQAuAHgAbQBsAAA3TQAyAFMAUwBDAG8AbgBzAG8AbABl
AFMAYwByAGkAcAB0AFMAYwBoAGUAbQBhAC4AeABzAGQAAA97ADAAfQAuAHsAMQB9AAAAnpvEFnHH
b02OjQe8tnfQ1AAIt3pcVhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZ
BAgAEhUECAASGQMGEgwEAAASDAQIABIMAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElER
VQQgABJZBiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQQgABJtBCAAEnEFIAESdRwDIAAc
AyAADgQAABJZBCAAElEGAAMODhwcBSABEn0OBSABARJ9BQACDg4OBQACAQ4OEQcJDhJZHQ4ODhKA
gR0OHQ4IRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUX2VkMGM5Njc3M2JjNjRmNzk5ODI5ZWEwNzU3NWQ1
MDYyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTUAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEAACQNAQAAAAAAAAAAAD4NAQAAIAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAwDQEAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAAB
AAAAAABIAAAAWCABALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4A
RgBPAAAAAAC9BO/+AAABAAAAAQBkaWsWAAABAGRpaxY/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAA
AAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQA
aQBvAG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAw
ADAAMAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AZQBkADAAYwA5ADYANwA3ADMAYgBjADYANABmADcAOQA5ADgAMgA5AGUAYQAwADcANQA3
ADUAZAA1ADAANgAyAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADUA
NwAzADkALgAyADYAOQA4ADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AZQBkADAAYwA5ADYANwA3ADMAYgBjADYANABmADcAOQA5ADgAMgA5AGUAYQAwADcANQA3ADUA
ZAA1ADAANgAyAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADUAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZQBkADAAYwA5ADYANwA3ADMAYgBjADYANABmADcAOQA5
ADgAMgA5AGUAYQAwADcANQA3ADUAZAA1ADAANgAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUA
YwB0AE4AYQBtAGUAAAAAAFMAVABfAGUAZAAwAGMAOQA2ADcANwAzAGIAYwA2ADQAZgA3ADkAOQA4
ADIAOQBlAGEAMAA3ADUANwA1AGQANQAwADYAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANQA3ADMAOQAuADIANgA5ADgAMAAAAAAASAAPAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQA3ADMAOQAuADIANgA5ADgAMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAwAAABQ
PQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Prepare SSMA.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{23987411-D114-4623-8E98-BC9743E6A7B5}"
          DTS:From="Package\Prepare SSMA\Create Temporary Directory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Prepare SSMA\Write SSMA Config" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Prepare SSMA.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{3A7F957A-51EE-47CA-A60A-335A103CEA40}"
          DTS:From="Package\Prepare SSMA\Create Temporary Directory"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Prepare SSMA\Write SSMA Script" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{8FF8692E-F256-4CAA-8F71-7C6E006EBD31}"
      DTS:From="Package\Prepare SSMA"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Execute SQL Server Migration Assistant" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{8BFD473C-632C-41EB-BA55-55EFE986781A}"
      DTS:From="Package\Drop all tables in `muse` database"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Prepare SSMA" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="245,42"
          Id="Package\Drop all tables in `muse` database"
          TopLeft="364,14" />
        <NodeLayout
          Size="210,42"
          Id="Package\Prepare SSMA\Create Temporary Directory"
          TopLeft="208.5,5.5" />
        <EdgeLayout
          Id="Package\Prepare SSMA.PrecedenceConstraints[Constraint 1]"
          TopLeft="279.833333333333,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-192.333333333333,60"
              Start="0,0"
              End="-192.333333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2722117202268" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2722117202268"
                    Point2="0,24.2722117202268"
                    Point3="-4,24.2722117202268" />
                  <mssgle:LineSegment
                    End="-188.333333333333,24.2722117202268" />
                  <mssgle:CubicBezierSegment
                    Point1="-188.333333333333,24.2722117202268"
                    Point2="-192.333333333333,24.2722117202268"
                    Point3="-192.333333333333,28.2722117202268" />
                  <mssgle:LineSegment
                    End="-192.333333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="164,42"
          Id="Package\Prepare SSMA\Write SSMA Script"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\Prepare SSMA\Write SSMA Config"
          TopLeft="230,107.5" />
        <EdgeLayout
          Id="Package\Prepare SSMA.PrecedenceConstraints[Constraint]"
          TopLeft="347.166666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-33.6666666666666,60"
              Start="0,0"
              End="-33.6666666666666,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2722117202268" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2722117202268"
                    Point2="0,24.2722117202268"
                    Point3="-4,24.2722117202268" />
                  <mssgle:LineSegment
                    End="-29.6666666666666,24.2722117202268" />
                  <mssgle:CubicBezierSegment
                    Point1="-29.6666666666666,24.2722117202268"
                    Point2="-33.6666666666666,24.2722117202268"
                    Point3="-33.6666666666666,28.2722117202268" />
                  <mssgle:LineSegment
                    End="-33.6666666666666,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="424,204"
          Size="424,248"
          Id="Package\Prepare SSMA"
          TopLeft="282,104" />
        <NodeLayout
          Size="264,42"
          Id="Package\Execute SQL Server Migration Assistant"
          TopLeft="362.5,416" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="494.25,352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="490.25,56">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>